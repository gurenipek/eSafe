

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun  6 19:39:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4620 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001CA0                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _segmentData
    80  001CA0  3F                 	db	63
    81  001CA1  06                 	db	6
    82  001CA2  5B                 	db	91
    83  001CA3  4F                 	db	79
    84  001CA4  66                 	db	102
    85  001CA5  6D                 	db	109
    86  001CA6  7D                 	db	125
    87  001CA7  07                 	db	7
    88  001CA8  7F                 	db	127
    89  001CA9  6F                 	db	111
    90  001CAA  00                 	db	0
    91  001CAB  49                 	db	73
    92  001CAC  48                 	db	72
    93  001CAD  08                 	db	8
    94  001CAE  00                 	db	0
    95  001CAF  00                 	db	0
    96                           
    97                           ;initializer for _TIM1LOAD
    98  001CB0  C350               	dw	50000
    99  001CB2  0000               	dw	0
   100                           
   101                           ;initializer for _TIM0LOAD
   102  001CB4  7530               	dw	30000
   103  001CB6  0000               	dw	0
   104                           
   105                           ;initializer for _lcd_y
   106  001CB8  01                 	db	1
   107                           
   108                           ;initializer for _lcd_x
   109  001CB9  01                 	db	1
   110                           
   111                           ;initializer for _downCounter90s
   112  001CBA  5A                 	db	90
   113  0000                     _TMR1L	set	4046
   114  0000                     _PORTE	set	3972
   115  0000                     _PORTA	set	3968
   116  0000                     _PORTB	set	3969
   117  0000                     _TRISB	set	3987
   118  0000                     _TRISD	set	3989
   119  0000                     _TRISEbits	set	3990
   120  0000                     _PORTD	set	3971
   121  0000                     _PORTEbits	set	3972
   122  0000                     _ADRESL	set	4035
   123  0000                     _ADRESH	set	4036
   124  0000                     _ADCON2	set	4032
   125  0000                     _ADCON1	set	4033
   126  0000                     _ADCON0	set	4034
   127  0000                     _TRISA	set	3986
   128  0000                     _PIR1bits	set	3998
   129  0000                     _TMR2	set	4044
   130  0000                     _PR2	set	4043
   131  0000                     _T2CON	set	4042
   132  0000                     _T1CON	set	4045
   133  0000                     _TMR1H	set	4047
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136  0000                     _T0CON	set	4053
   137  0000                     _IRCF0	set	32412
   138  0000                     _IRCF1	set	32413
   139  0000                     _IRCF2	set	32414
   140  0000                     _PLLEN	set	31966
   141  0000                     _RBIP	set	32648
   142  0000                     _INTEDG1	set	32653
   143  0000                     _INTEDG0	set	32654
   144  0000                     _RBPU	set	32655
   145  0000                     _INT2IE	set	32644
   146  0000                     _INT1IE	set	32643
   147  0000                     _RBIE	set	32659
   148  0000                     _RC5	set	31765
   149  0000                     _TMR2IF	set	31985
   150  0000                     _TMR1IF	set	31984
   151  0000                     _INT0IE	set	32660
   152  0000                     _TMR0IF	set	32658
   153  0000                     _RBIF	set	32656
   154  0000                     _INT2IF	set	32641
   155  0000                     _INT1IF	set	32640
   156  0000                     _INT0IF	set	32657
   157  0000                     _ADIF	set	31990
   158  0000                     _ADIP	set	31998
   159  0000                     _ADIE	set	31982
   160  0000                     _IPEN	set	32391
   161  0000                     _TMR2IE	set	31977
   162  0000                     _TMR2ON	set	32338
   163  0000                     _TMR1IE	set	31976
   164  0000                     _T1CKPS1	set	32365
   165  0000                     _T1CKPS0	set	32364
   166  0000                     _TMR1CS	set	32361
   167  0000                     _T1OSCEN	set	32363
   168  0000                     _TMR1ON	set	32360
   169  0000                     _PEIE	set	32662
   170  0000                     _GIE	set	32663
   171  0000                     _TMR0IE	set	32661
   172  0000                     _T0PS2	set	32426
   173  0000                     _T0PS1	set	32425
   174  0000                     _T0PS0	set	32424
   175  0000                     _PSA	set	32427
   176  0000                     _T0CS	set	32429
   177  0000                     _T08BIT	set	32430
   178  0000                     _TMR0ON	set	32431
   179                           
   180                           	psect	smallconst
   181  001000                     __psmallconst:
   182                           	callstack 0
   183  001000  00                 	db	0
   184  001001                     STR_1:
   185  001001  53                 	db	83	;'S'
   186  001002  75                 	db	117	;'u'
   187  001003  70                 	db	112	;'p'
   188  001004  65                 	db	101	;'e'
   189  001005  72                 	db	114	;'r'
   190  001006  53                 	db	83	;'S'
   191  001007  65                 	db	101	;'e'
   192  001008  63                 	db	99	;'c'
   193  001009  75                 	db	117	;'u'
   194  00100A  72                 	db	114	;'r'
   195  00100B  65                 	db	101	;'e'
   196  00100C  53                 	db	83	;'S'
   197  00100D  61                 	db	97	;'a'
   198  00100E  66                 	db	102	;'f'
   199  00100F  65                 	db	101	;'e'
   200  001010  21                 	db	33
   201  001011  00                 	db	0
   202  001012                     STR_11:
   203  001012  53                 	db	83	;'S'
   204  001013  61                 	db	97	;'a'
   205  001014  66                 	db	102	;'f'
   206  001015  65                 	db	101	;'e'
   207  001016  20                 	db	32
   208  001017  69                 	db	105	;'i'
   209  001018  73                 	db	115	;'s'
   210  001019  20                 	db	32
   211  00101A  4C                 	db	76	;'L'
   212  00101B  6F                 	db	111	;'o'
   213  00101C  63                 	db	99	;'c'
   214  00101D  6B                 	db	107	;'k'
   215  00101E  65                 	db	101	;'e'
   216  00101F  64                 	db	100	;'d'
   217  001020  21                 	db	33
   218  001021  00                 	db	0
   219  001022                     STR_4:
   220  001022  49                 	db	73	;'I'
   221  001023  6E                 	db	110	;'n'
   222  001024  70                 	db	112	;'p'
   223  001025  75                 	db	117	;'u'
   224  001026  74                 	db	116	;'t'
   225  001027  20                 	db	32
   226  001028  50                 	db	80	;'P'
   227  001029  61                 	db	97	;'a'
   228  00102A  73                 	db	115	;'s'
   229  00102B  73                 	db	115	;'s'
   230  00102C  77                 	db	119	;'w'
   231  00102D  6F                 	db	111	;'o'
   232  00102E  72                 	db	114	;'r'
   233  00102F  64                 	db	100	;'d'
   234  001030  3A                 	db	58	;':'
   235  001031  00                 	db	0
   236  001032                     STR_8:
   237  001032  55                 	db	85	;'U'
   238  001033  6E                 	db	110	;'n'
   239  001034  6C                 	db	108	;'l'
   240  001035  6F                 	db	111	;'o'
   241  001036  63                 	db	99	;'c'
   242  001037  6B                 	db	107	;'k'
   243  001038  65                 	db	101	;'e'
   244  001039  64                 	db	100	;'d'
   245  00103A  3B                 	db	59	;';'
   246  00103B  20                 	db	32
   247  00103C  50                 	db	80	;'P'
   248  00103D  72                 	db	114	;'r'
   249  00103E  65                 	db	101	;'e'
   250  00103F  73                 	db	115	;'s'
   251  001040  73                 	db	115	;'s'
   252  001041  00                 	db	0
   253  001042                     STR_2:
   254  001042  53                 	db	83	;'S'
   255  001043  65                 	db	101	;'e'
   256  001044  74                 	db	116	;'t'
   257  001045  20                 	db	32
   258  001046  50                 	db	80	;'P'
   259  001047  61                 	db	97	;'a'
   260  001048  73                 	db	115	;'s'
   261  001049  73                 	db	115	;'s'
   262  00104A  77                 	db	119	;'w'
   263  00104B  6F                 	db	111	;'o'
   264  00104C  72                 	db	114	;'r'
   265  00104D  64                 	db	100	;'d'
   266  00104E  3A                 	db	58	;':'
   267  00104F  00                 	db	0
   268  001050                     STR_9:
   269  001050  52                 	db	82	;'R'
   270  001051  42                 	db	66	;'B'
   271  001052  34                 	db	52	;'4'
   272  001053  20                 	db	32
   273  001054  74                 	db	116	;'t'
   274  001055  6F                 	db	111	;'o'
   275  001056  20                 	db	32
   276  001057  6C                 	db	108	;'l'
   277  001058  6F                 	db	111	;'o'
   278  001059  63                 	db	99	;'c'
   279  00105A  6B                 	db	107	;'k'
   280  00105B  21                 	db	33
   281  00105C  00                 	db	0
   282  00105D                     STR_10:
   283  00105D  59                 	db	89	;'Y'
   284  00105E  6F                 	db	111	;'o'
   285  00105F  75                 	db	117	;'u'
   286  001060  20                 	db	32
   287  001061  46                 	db	70	;'F'
   288  001062  61                 	db	97	;'a'
   289  001063  69                 	db	105	;'i'
   290  001064  6C                 	db	108	;'l'
   291  001065  65                 	db	101	;'e'
   292  001066  64                 	db	100	;'d'
   293  001067  21                 	db	33
   294  001068  00                 	db	0
   295  001069                     STR_6:
   296  001069  54                 	db	84	;'T'
   297  00106A  72                 	db	114	;'r'
   298  00106B  79                 	db	121	;'y'
   299  00106C  20                 	db	32
   300  00106D  41                 	db	65	;'A'
   301  00106E  67                 	db	103	;'g'
   302  00106F  61                 	db	97	;'a'
   303  001070  69                 	db	105	;'i'
   304  001071  6E                 	db	110	;'n'
   305  001072  3A                 	db	58	;':'
   306  001073  00                 	db	0
   307  001074                     STR_3:
   308  001074  5F                 	db	95	;'_'
   309  001075  5F                 	db	95	;'_'
   310  001076  2D                 	db	45
   311  001077  5F                 	db	95	;'_'
   312  001078  5F                 	db	95	;'_'
   313  001079  2D                 	db	45
   314  00107A  5F                 	db	95	;'_'
   315  00107B  5F                 	db	95	;'_'
   316  00107C  00                 	db	0
   317  00107D  00                 	db	0	; dummy byte at the end
   318  0000                     
   319                           ; #config settings
   320                           
   321                           	psect	cinit
   322  001B08                     __pcinit:
   323                           	callstack 0
   324  001B08                     start_initialization:
   325                           	callstack 0
   326  001B08                     __initialization:
   327                           	callstack 0
   328                           
   329                           ; Initialize objects allocated to COMRAM (27 bytes)
   330                           ; load TBLPTR registers with __pidataCOMRAM
   331  001B08  0EA0               	movlw	low __pidataCOMRAM
   332  001B0A  6EF6               	movwf	tblptrl,c
   333  001B0C  0E1C               	movlw	high __pidataCOMRAM
   334  001B0E  6EF7               	movwf	tblptrh,c
   335  001B10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   336  001B12  6EF8               	movwf	tblptru,c
   337  001B14  EE00  F029         	lfsr	0,__pdataCOMRAM
   338  001B18  EE10 F01B          	lfsr	1,27
   339  001B1C                     copy_data0:
   340  001B1C  0009               	tblrd		*+
   341  001B1E  CFF5 FFEE          	movff	tablat,postinc0
   342  001B22  50E5               	movf	postdec1,w,c
   343  001B24  50E1               	movf	fsr1l,w,c
   344  001B26  E1FA               	bnz	copy_data0
   345                           
   346                           ; Clear objects allocated to COMRAM (21 bytes)
   347  001B28  EE00  F044         	lfsr	0,__pbssCOMRAM
   348  001B2C  0E15               	movlw	21
   349  001B2E                     clear_0:
   350  001B2E  6AEE               	clrf	postinc0,c
   351  001B30  06E8               	decf	wreg,f,c
   352  001B32  E1FD               	bnz	clear_0
   353  001B34                     end_of_initialization:
   354                           	callstack 0
   355  001B34                     __end_of__initialization:
   356                           	callstack 0
   357  001B34  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   358  001B36  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359  001B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   360  001B3A  6EF8               	movwf	tblptru,c
   361  001B3C  0100               	movlb	0
   362  001B3E  EF3F  F008         	goto	_main	;jump to C main() function
   363                           
   364                           	psect	bssCOMRAM
   365  000044                     __pbssCOMRAM:
   366                           	callstack 0
   367  000044                     _displayData:
   368                           	callstack 0
   369  000044                     	ds	4
   370  000048                     _passwordsSet:
   371                           	callstack 0
   372  000048                     	ds	3
   373  00004B                     _passwordsAttempt:
   374                           	callstack 0
   375  00004B                     	ds	3
   376  00004E                     _TMR2Counter:
   377                           	callstack 0
   378  00004E                     	ds	2
   379  000050                     	ds	1
   380  000051                     my_ISR@halfSec:
   381                           	callstack 0
   382  000051                     	ds	1
   383  000052                     _blinkEnable:
   384                           	callstack 0
   385  000052                     	ds	1
   386  000053                     _lockAgain:
   387                           	callstack 0
   388  000053                     	ds	1
   389  000054                     _start3:
   390                           	callstack 0
   391  000054                     	ds	1
   392  000055                     _safeState:
   393                           	callstack 0
   394  000055                     	ds	1
   395  000056                     _firstTime:
   396                           	callstack 0
   397  000056                     	ds	1
   398  000057                     _result_ADC:
   399                           	callstack 0
   400  000057                     	ds	1
   401  000058                     _digitEntryCount:
   402                           	callstack 0
   403  000058                     	ds	1
   404                           
   405                           	psect	dataCOMRAM
   406  000029                     __pdataCOMRAM:
   407                           	callstack 0
   408  000029                     _segmentData:
   409                           	callstack 0
   410  000029                     	ds	16
   411  000039                     _TIM1LOAD:
   412                           	callstack 0
   413  000039                     	ds	4
   414  00003D                     _TIM0LOAD:
   415                           	callstack 0
   416  00003D                     	ds	4
   417  000041                     _lcd_y:
   418                           	callstack 0
   419  000041                     	ds	1
   420  000042                     _lcd_x:
   421                           	callstack 0
   422  000042                     	ds	1
   423  000043                     _downCounter90s:
   424                           	callstack 0
   425  000043                     	ds	1
   426                           
   427                           	psect	cstackCOMRAM
   428  000001                     __pcstackCOMRAM:
   429                           	callstack 0
   430  000001                     ?___lwdiv:
   431                           	callstack 0
   432  000001                     ?i2___awdiv:
   433                           	callstack 0
   434  000001                     ___lwdiv@dividend:
   435                           	callstack 0
   436  000001                     i2___awdiv@dividend:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x0
   440  000001                     	ds	2
   441  000003                     ___lwdiv@divisor:
   442                           	callstack 0
   443  000003                     i2___awdiv@divisor:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447  000003                     	ds	2
   448  000005                     i2___awdiv@counter:
   449                           	callstack 0
   450  000005                     ___lwdiv@quotient:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x4
   454  000005                     	ds	1
   455  000006                     i2___awdiv@sign:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x5
   459  000006                     	ds	1
   460  000007                     ___lwdiv@counter:
   461                           	callstack 0
   462  000007                     i2___awdiv@quotient:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x6
   466  000007                     	ds	2
   467  000009                     ??_my_ISR:
   468                           
   469                           ; 1 bytes @ 0x8
   470  000009                     	ds	6
   471  00000F                     my_ISR@before:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xE
   475  00000F                     	ds	1
   476  000010                     my_ISR@read_ADC_Raw:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xF
   480  000010                     	ds	2
   481  000012                     ??_LCDCmd:
   482  000012                     ??_LCDDat:
   483  000012                     ?_passwordCheck:
   484                           	callstack 0
   485  000012                     ?___awdiv:
   486                           	callstack 0
   487  000012                     delayWithTimer2@milliseconds:
   488                           	callstack 0
   489  000012                     ___awdiv@dividend:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493  000012                     	ds	1
   494  000013                     LCDCmd@cmd:
   495                           	callstack 0
   496  000013                     LCDDat@dat:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x12
   500  000013                     	ds	1
   501  000014                     LCDGoto@p_1:
   502                           	callstack 0
   503  000014                     delayWithTimer2@currentVal:
   504                           	callstack 0
   505  000014                     ___awdiv@divisor:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x13
   509  000014                     	ds	1
   510  000015                     LCDGoto@p_2:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x14
   514  000015                     	ds	1
   515  000016                     passwordCheck@n:
   516                           	callstack 0
   517  000016                     ___awdiv@counter:
   518                           	callstack 0
   519  000016                     LCDStr@str:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x15
   523  000016                     	ds	1
   524  000017                     ___awdiv@sign:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x16
   528  000017                     	ds	1
   529  000018                     ??_LCDStr:
   530  000018                     ___awdiv@quotient:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x17
   534  000018                     	ds	2
   535  00001A                     LCDStr@i:
   536                           	callstack 0
   537  00001A                     displayNumbers@value:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x19
   541  00001A                     	ds	2
   542  00001C                     displayNumbers@digitNo:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x1B
   546  00001C                     	ds	1
   547  00001D                     ??_displayNumbers:
   548                           
   549                           ; 1 bytes @ 0x1C
   550  00001D                     	ds	2
   551  00001F                     displayNumbers@digitL:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x1E
   555  00001F                     	ds	1
   556  000020                     displayNumbers@digitH:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x1F
   560  000020                     	ds	1
   561  000021                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x20
   564  000021                     	ds	2
   565  000023                     main@isValid:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x22
   569  000023                     	ds	2
   570  000025                     main@heaterTemperature:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x24
   574  000025                     	ds	1
   575  000026                     main@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x25
   579  000026                     	ds	2
   580  000028                     main@attemption:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x27
   584  000028                     	ds	1
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 24 in file "eSafeMain.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  i               2   37[COMRAM] int 
   596 ;;  isValid         2   34[COMRAM] int 
   597 ;;  attemption      1   39[COMRAM] unsigned char 
   598 ;;  heaterTemper    1   36[COMRAM] unsigned char 
   599 ;;  digit4          1    0        unsigned char 
   600 ;;  digit3          1    0        unsigned char 
   601 ;;  digit2          1    0        unsigned char 
   602 ;;  digit1          1    0        unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   616 ;;Total ram usage:        8 bytes
   617 ;; Hardware stack levels required when called: 5
   618 ;; This function calls:
   619 ;;		_InitLCD
   620 ;;		_LCDCmd
   621 ;;		_LCDGoto
   622 ;;		_LCDStr
   623 ;;		___awdiv
   624 ;;		_config_ADC_Potentiometer
   625 ;;		_config_ADC_Thermometer
   626 ;;		_delayWithTimer2
   627 ;;		_displayNumbers
   628 ;;		_init_ADC_Potentiometer
   629 ;;		_init_ADC_Thermometer
   630 ;;		_init_Clock
   631 ;;		_init_PORTB
   632 ;;		_init_TIMER0
   633 ;;		_init_TIMER1
   634 ;;		_init_TIMER2
   635 ;;		_passwordCheck
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text0
   642  00107E                     __ptext0:
   643                           	callstack 0
   644  00107E                     _main:
   645                           	callstack 26
   646  00107E                     
   647                           ;eSafeMain.c: 26:   byte digit1, digit2, digit3, digit4;;eSafeMain.c: 27:   byte heaterT
      +                          emperature;;eSafeMain.c: 28:   byte attemption;;eSafeMain.c: 29:   int isValid;;eSafeMai
      +                          n.c: 32:   init_Clock();
   648  00107E  EC85  F00E         	call	_init_Clock	;wreg free
   649  001082                     
   650                           ;eSafeMain.c: 33:   InitLCD();
   651  001082  ECBB  F00D         	call	_InitLCD	;wreg free
   652  001086                     
   653                           ;eSafeMain.c: 34:   init_ADC_Thermometer();
   654  001086  ECEA  F00D         	call	_init_ADC_Thermometer	;wreg free
   655  00108A                     
   656                           ;eSafeMain.c: 35:   init_ADC_Potentiometer();
   657  00108A  ECFD  F00D         	call	_init_ADC_Potentiometer	;wreg free
   658  00108E                     
   659                           ;eSafeMain.c: 36:   init_PORTB();
   660  00108E  EC69  F00E         	call	_init_PORTB	;wreg free
   661                           
   662                           ;eSafeMain.c: 37:   init_TIMER2();
   663  001092  EC21  F00E         	call	_init_TIMER2	;wreg free
   664  001096                     
   665                           ;eSafeMain.c: 39:   safeState = 1;
   666  001096  0E01               	movlw	1
   667  001098  6E55               	movwf	_safeState^0,c
   668  00109A                     l2302:
   669                           
   670                           ;eSafeMain.c: 41:       PORTB = 0;
   671  00109A  0E00               	movlw	0
   672  00109C  6E81               	movwf	129,c	;volatile
   673  00109E                     
   674                           ;eSafeMain.c: 42:       PORTD = 0;
   675  00109E  0E00               	movlw	0
   676  0010A0  6E83               	movwf	131,c	;volatile
   677  0010A2                     
   678                           ;eSafeMain.c: 43:       INT0IF = 0;
   679  0010A2  92F2               	bcf	4082,1,c	;volatile
   680  0010A4                     
   681                           ;eSafeMain.c: 47:       safeState = 1;
   682  0010A4  0E01               	movlw	1
   683  0010A6  6E55               	movwf	_safeState^0,c
   684                           
   685                           ;eSafeMain.c: 48:       LCDCmd(0x01);
   686  0010A8  0E01               	movlw	1
   687  0010AA  EC41  F00E         	call	_LCDCmd
   688  0010AE                     
   689                           ;eSafeMain.c: 49:       LCDGoto(1, 1);
   690  0010AE  0E01               	movlw	1
   691  0010B0  6E14               	movwf	LCDGoto@p_1^0,c
   692  0010B2  0E01               	movlw	1
   693  0010B4  ECA1  F00D         	call	_LCDGoto
   694  0010B8                     
   695                           ;eSafeMain.c: 50:       LCDStr("SuperSecureSafe!");
   696  0010B8  0E01               	movlw	low STR_1
   697  0010BA  6E16               	movwf	LCDStr@str^0,c
   698  0010BC  0E10               	movlw	high STR_1
   699  0010BE  6E17               	movwf	(LCDStr@str+1)^0,c
   700  0010C0  ECDA  F00C         	call	_LCDStr	;wreg free
   701  0010C4                     
   702                           ;eSafeMain.c: 51:       delayWithTimer2 (2000);
   703  0010C4  0E07               	movlw	7
   704  0010C6  6E13               	movwf	(delayWithTimer2@milliseconds+1)^0,c
   705  0010C8  0ED0               	movlw	208
   706  0010CA  6E12               	movwf	delayWithTimer2@milliseconds^0,c
   707  0010CC  ECD4  F00D         	call	_delayWithTimer2	;wreg free
   708  0010D0                     
   709                           ;eSafeMain.c: 52:       INT0IE = 1;
   710  0010D0  88F2               	bsf	4082,4,c	;volatile
   711  0010D2                     
   712                           ;eSafeMain.c: 57:       safeState = 2;
   713  0010D2  0E02               	movlw	2
   714  0010D4  6E55               	movwf	_safeState^0,c
   715  0010D6                     
   716                           ;eSafeMain.c: 59:       LCDCmd(0x01);
   717  0010D6  0E01               	movlw	1
   718  0010D8  EC41  F00E         	call	_LCDCmd
   719  0010DC                     
   720                           ;eSafeMain.c: 60:       LCDGoto(1, 1);
   721  0010DC  0E01               	movlw	1
   722  0010DE  6E14               	movwf	LCDGoto@p_1^0,c
   723  0010E0  0E01               	movlw	1
   724  0010E2  ECA1  F00D         	call	_LCDGoto
   725  0010E6                     
   726                           ;eSafeMain.c: 61:       LCDStr("Set Password:");
   727  0010E6  0E42               	movlw	low STR_2
   728  0010E8  6E16               	movwf	LCDStr@str^0,c
   729  0010EA  0E10               	movlw	high STR_2
   730  0010EC  6E17               	movwf	(LCDStr@str+1)^0,c
   731  0010EE  ECDA  F00C         	call	_LCDStr	;wreg free
   732  0010F2                     
   733                           ;eSafeMain.c: 62:       LCDGoto(1, 2);
   734  0010F2  0E02               	movlw	2
   735  0010F4  6E14               	movwf	LCDGoto@p_1^0,c
   736  0010F6  0E01               	movlw	1
   737  0010F8  ECA1  F00D         	call	_LCDGoto
   738  0010FC                     
   739                           ;eSafeMain.c: 63:       LCDStr("__-__-__");
   740  0010FC  0E74               	movlw	low STR_3
   741  0010FE  6E16               	movwf	LCDStr@str^0,c
   742  001100  0E10               	movlw	high STR_3
   743  001102  6E17               	movwf	(LCDStr@str+1)^0,c
   744  001104  ECDA  F00C         	call	_LCDStr	;wreg free
   745  001108                     
   746                           ;eSafeMain.c: 65:       result_ADC = 0;
   747  001108  0E00               	movlw	0
   748  00110A  6E57               	movwf	_result_ADC^0,c
   749  00110C                     
   750                           ;eSafeMain.c: 66:       digitEntryCount = 0;
   751  00110C  0E00               	movlw	0
   752  00110E  6E58               	movwf	_digitEntryCount^0,c
   753                           
   754                           ;eSafeMain.c: 68:       while (digitEntryCount < 4){
   755  001110  EF96  F008         	goto	l2340
   756  001114                     l2334:
   757                           
   758                           ;eSafeMain.c: 69:           ADCON0 |= 0x02;
   759  001114  82C2               	bsf	194,1,c	;volatile
   760  001116                     
   761                           ;eSafeMain.c: 70:           _delay((unsigned long)((20)*(4000000L/4000000.0)));
   762  001116  0E06               	movlw	6
   763  001118                     u1097:
   764  001118  2EE8               	decfsz	wreg,f,c
   765  00111A  D7FE               	bra	u1097
   766  00111C  D000               	nop2	
   767  00111E                     
   768                           ;eSafeMain.c: 71:           displayNumbers (result_ADC, digitEntryCount);
   769  00111E  C057  F01A         	movff	_result_ADC,displayNumbers@value
   770  001122  6A1B               	clrf	(displayNumbers@value+1)^0,c
   771  001124  C058  F01C         	movff	_digitEntryCount,displayNumbers@digitNo
   772  001128  ECAC  F00B         	call	_displayNumbers	;wreg free
   773  00112C                     l2340:
   774                           
   775                           ;eSafeMain.c: 68:       while (digitEntryCount < 4){
   776  00112C  0E03               	movlw	3
   777  00112E  6458               	cpfsgt	_digitEntryCount^0,c
   778  001130  EF9C  F008         	goto	u981
   779  001134  EF9E  F008         	goto	u980
   780  001138                     u981:
   781  001138  EF8A  F008         	goto	l2334
   782  00113C                     u980:
   783  00113C                     
   784                           ;eSafeMain.c: 75:       for (int i = 0;i < 3; i++){
   785  00113C  0E00               	movlw	0
   786  00113E  6E27               	movwf	(main@i+1)^0,c
   787  001140  0E00               	movlw	0
   788  001142  6E26               	movwf	main@i^0,c
   789  001144                     l2348:
   790                           
   791                           ;eSafeMain.c: 76:           passwordsSet[i] = passwordsAttempt[i];
   792  001144  0E4B               	movlw	low _passwordsAttempt
   793  001146  2426               	addwf	main@i^0,w,c
   794  001148  6ED9               	movwf	fsr2l,c
   795  00114A  0E00               	movlw	high _passwordsAttempt
   796  00114C  2027               	addwfc	(main@i+1)^0,w,c
   797  00114E  6EDA               	movwf	fsr2h,c
   798  001150  0E48               	movlw	low _passwordsSet
   799  001152  2426               	addwf	main@i^0,w,c
   800  001154  6EE1               	movwf	fsr1l,c
   801  001156  0E00               	movlw	high _passwordsSet
   802  001158  2027               	addwfc	(main@i+1)^0,w,c
   803  00115A  6EE2               	movwf	fsr1h,c
   804  00115C  CFDF FFE7          	movff	indf2,indf1
   805  001160                     
   806                           ;eSafeMain.c: 77:       }
   807  001160  4A26               	infsnz	main@i^0,f,c
   808  001162  2A27               	incf	(main@i+1)^0,f,c
   809  001164  BE27               	btfsc	(main@i+1)^0,7,c
   810  001166  EFBE  F008         	goto	u991
   811  00116A  5027               	movf	(main@i+1)^0,w,c
   812  00116C  E109               	bnz	u990
   813  00116E  0E03               	movlw	3
   814  001170  5C26               	subwf	main@i^0,w,c
   815  001172  A0D8               	btfss	status,0,c
   816  001174  EFBE  F008         	goto	u991
   817  001178  EFC0  F008         	goto	u990
   818  00117C                     u991:
   819  00117C  EFA2  F008         	goto	l2348
   820  001180                     u990:
   821  001180                     
   822                           ;eSafeMain.c: 83:       safeState = 3;
   823  001180  0E03               	movlw	3
   824  001182  6E55               	movwf	_safeState^0,c
   825  001184                     
   826                           ;eSafeMain.c: 85:       init_TIMER0();
   827  001184  EC10  F00E         	call	_init_TIMER0	;wreg free
   828  001188                     
   829                           ;eSafeMain.c: 86:       init_TIMER1();
   830  001188  EC5E  F00E         	call	_init_TIMER1	;wreg free
   831                           
   832                           ;eSafeMain.c: 89:       downCounter90s = 90;
   833  00118C  0E5A               	movlw	90
   834  00118E  6E43               	movwf	_downCounter90s^0,c
   835                           
   836                           ;eSafeMain.c: 91:       displayData[0] = 10;
   837  001190  0E0A               	movlw	10
   838  001192  6E44               	movwf	_displayData^0,c
   839                           
   840                           ;eSafeMain.c: 92:       displayData[1] = 11;
   841  001194  0E0B               	movlw	11
   842  001196  6E45               	movwf	(_displayData+1)^0,c
   843                           
   844                           ;eSafeMain.c: 93:       displayData[2] = 9;
   845  001198  0E09               	movlw	9
   846  00119A  6E46               	movwf	(_displayData+2)^0,c
   847                           
   848                           ;eSafeMain.c: 94:       displayData[3] = 0;
   849  00119C  0E00               	movlw	0
   850  00119E  6E47               	movwf	(_displayData+3)^0,c
   851  0011A0                     
   852                           ;eSafeMain.c: 95:       TMR1ON = 1;
   853  0011A0  80CD               	bsf	4045,0,c	;volatile
   854  0011A2                     
   855                           ;eSafeMain.c: 98:       LCDCmd(0x01);
   856  0011A2  0E01               	movlw	1
   857  0011A4  EC41  F00E         	call	_LCDCmd
   858  0011A8                     
   859                           ;eSafeMain.c: 99:       LCDGoto(1, 1);
   860  0011A8  0E01               	movlw	1
   861  0011AA  6E14               	movwf	LCDGoto@p_1^0,c
   862  0011AC  0E01               	movlw	1
   863  0011AE  ECA1  F00D         	call	_LCDGoto
   864  0011B2                     
   865                           ;eSafeMain.c: 100:       LCDStr("Input Password:");
   866  0011B2  0E22               	movlw	low STR_4
   867  0011B4  6E16               	movwf	LCDStr@str^0,c
   868  0011B6  0E10               	movlw	high STR_4
   869  0011B8  6E17               	movwf	(LCDStr@str+1)^0,c
   870  0011BA  ECDA  F00C         	call	_LCDStr	;wreg free
   871  0011BE                     
   872                           ;eSafeMain.c: 101:       LCDGoto(1, 2);
   873  0011BE  0E02               	movlw	2
   874  0011C0  6E14               	movwf	LCDGoto@p_1^0,c
   875  0011C2  0E01               	movlw	1
   876  0011C4  ECA1  F00D         	call	_LCDGoto
   877  0011C8                     
   878                           ;eSafeMain.c: 102:       LCDStr("__-__-__");
   879  0011C8  0E74               	movlw	low STR_3
   880  0011CA  6E16               	movwf	LCDStr@str^0,c
   881  0011CC  0E10               	movlw	high STR_3
   882  0011CE  6E17               	movwf	(LCDStr@str+1)^0,c
   883  0011D0  ECDA  F00C         	call	_LCDStr	;wreg free
   884  0011D4                     
   885                           ;eSafeMain.c: 106:       start3 = 0;
   886  0011D4  0E00               	movlw	0
   887  0011D6  6E54               	movwf	_start3^0,c
   888  0011D8                     
   889                           ;eSafeMain.c: 107:       digitEntryCount = 0;
   890  0011D8  0E00               	movlw	0
   891  0011DA  6E58               	movwf	_digitEntryCount^0,c
   892                           
   893                           ;eSafeMain.c: 108:       while (!start3){
   894  0011DC  EFF6  F008         	goto	l2382
   895  0011E0                     l2376:
   896                           
   897                           ;eSafeMain.c: 109:           ADCON0 |= 0x02;
   898  0011E0  82C2               	bsf	194,1,c	;volatile
   899  0011E2                     
   900                           ;eSafeMain.c: 110:           _delay((unsigned long)((20)*(4000000L/4000000.0)));
   901  0011E2  0E06               	movlw	6
   902  0011E4                     u1107:
   903  0011E4  2EE8               	decfsz	wreg,f,c
   904  0011E6  D7FE               	bra	u1107
   905  0011E8  D000               	nop2	
   906  0011EA                     
   907                           ;eSafeMain.c: 111:           INT0IE = 1;
   908  0011EA  88F2               	bsf	4082,4,c	;volatile
   909  0011EC                     l2382:
   910                           
   911                           ;eSafeMain.c: 108:       while (!start3){
   912  0011EC  5054               	movf	_start3^0,w,c
   913  0011EE  B4D8               	btfsc	status,2,c
   914  0011F0  EFFC  F008         	goto	u1001
   915  0011F4  EFFE  F008         	goto	u1000
   916  0011F8                     u1001:
   917  0011F8  EFF0  F008         	goto	l2376
   918  0011FC                     u1000:
   919  0011FC                     
   920                           ;eSafeMain.c: 114:       digitEntryCount = 1;
   921  0011FC  0E01               	movlw	1
   922  0011FE  6E58               	movwf	_digitEntryCount^0,c
   923                           
   924                           ;eSafeMain.c: 115:       attemption = 3;
   925  001200  0E03               	movlw	3
   926  001202  6E28               	movwf	main@attemption^0,c
   927                           
   928                           ;eSafeMain.c: 116:       while (attemption){
   929  001204  EFAE  F009         	goto	l2440
   930  001208                     l2386:
   931                           
   932                           ;eSafeMain.c: 120:                   displayData[0] = 10;
   933  001208  0E0A               	movlw	10
   934  00120A  6E44               	movwf	_displayData^0,c
   935                           
   936                           ;eSafeMain.c: 121:                   displayData[1] = 13;
   937  00120C  0E0D               	movlw	13
   938  00120E  6E45               	movwf	(_displayData+1)^0,c
   939                           
   940                           ;eSafeMain.c: 124:               break;
   941  001210  EF2E  F009         	goto	l2394
   942  001214                     l2388:
   943                           
   944                           ;eSafeMain.c: 127:                   blinkEnable = 1;
   945  001214  0E01               	movlw	1
   946  001216  6E52               	movwf	_blinkEnable^0,c
   947                           
   948                           ;eSafeMain.c: 128:                   displayData[0] = 10;
   949  001218  0E0A               	movlw	10
   950  00121A  6E44               	movwf	_displayData^0,c
   951                           
   952                           ;eSafeMain.c: 129:                   displayData[1] = 12;
   953  00121C  0E0C               	movlw	12
   954  00121E  6E45               	movwf	(_displayData+1)^0,c
   955                           
   956                           ;eSafeMain.c: 130:               break;
   957  001220  EF2E  F009         	goto	l2394
   958  001224                     l329:
   959                           
   960                           ;eSafeMain.c: 133:                   TMR0ON = 1;
   961  001224  8ED5               	bsf	4053,7,c	;volatile
   962                           
   963                           ;eSafeMain.c: 134:               break;
   964  001226  EF2E  F009         	goto	l2394
   965  00122A                     l2392:
   966  00122A  5028               	movf	main@attemption^0,w,c
   967  00122C  6E21               	movwf	??_main^0,c
   968  00122E  6A22               	clrf	(??_main+1)^0,c
   969                           
   970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 1, Range of values is 0 to 0
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte            4     3 (average)
   976                           ;	Chosen strategy is simple_byte
   977  001230  5022               	movf	(??_main+1)^0,w,c
   978  001232  0A00               	xorlw	0	; case 0
   979  001234  B4D8               	btfsc	status,2,c
   980  001236  EF1F  F009         	goto	l2512
   981  00123A  EF2E  F009         	goto	l2394
   982  00123E                     l2512:
   983                           
   984                           ; Switch size 1, requested type "simple"
   985                           ; Number of cases is 3, Range of values is 1 to 3
   986                           ; switch strategies available:
   987                           ; Name         Instructions Cycles
   988                           ; simple_byte           10     6 (average)
   989                           ;	Chosen strategy is simple_byte
   990  00123E  5021               	movf	??_main^0,w,c
   991  001240  0A01               	xorlw	1	; case 1
   992  001242  B4D8               	btfsc	status,2,c
   993  001244  EF04  F009         	goto	l2386
   994  001248  0A03               	xorlw	3	; case 2
   995  00124A  B4D8               	btfsc	status,2,c
   996  00124C  EF0A  F009         	goto	l2388
   997  001250  0A01               	xorlw	1	; case 3
   998  001252  B4D8               	btfsc	status,2,c
   999  001254  EF12  F009         	goto	l329
  1000  001258  EF2E  F009         	goto	l2394
  1001  00125C                     l2394:
  1002                           
  1003                           ;eSafeMain.c: 142:           digitEntryCount = 1;
  1004  00125C  0E01               	movlw	1
  1005  00125E  6E58               	movwf	_digitEntryCount^0,c
  1006                           
  1007                           ;eSafeMain.c: 143:           while (digitEntryCount < 4){
  1008  001260  EF77  F009         	goto	l2420
  1009  001264                     l2396:
  1010                           
  1011                           ;eSafeMain.c: 144:                config_ADC_Potentiometer();
  1012  001264  EC7D  F00E         	call	_config_ADC_Potentiometer	;wreg free
  1013  001268                     
  1014                           ;eSafeMain.c: 145:                ADCON0 |= 0x02;
  1015  001268  82C2               	bsf	194,1,c	;volatile
  1016  00126A                     
  1017                           ;eSafeMain.c: 146:                _delay((unsigned long)((20)*(4000000L/4000000.0)));
  1018  00126A  0E06               	movlw	6
  1019  00126C                     u1117:
  1020  00126C  2EE8               	decfsz	wreg,f,c
  1021  00126E  D7FE               	bra	u1117
  1022  001270  D000               	nop2	
  1023  001272                     
  1024                           ;eSafeMain.c: 149:                displayNumbers (result_ADC, digitEntryCount);
  1025  001272  C057  F01A         	movff	_result_ADC,displayNumbers@value
  1026  001276  6A1B               	clrf	(displayNumbers@value+1)^0,c
  1027  001278  C058  F01C         	movff	_digitEntryCount,displayNumbers@digitNo
  1028  00127C  ECAC  F00B         	call	_displayNumbers	;wreg free
  1029  001280                     
  1030                           ;eSafeMain.c: 152:                if (attemption == 1) {
  1031  001280  0428               	decf	main@attemption^0,w,c
  1032  001282  A4D8               	btfss	status,2,c
  1033  001284  EF46  F009         	goto	u1011
  1034  001288  EF48  F009         	goto	u1010
  1035  00128C                     u1011:
  1036  00128C  EF77  F009         	goto	l2420
  1037  001290                     u1010:
  1038  001290                     
  1039                           ;eSafeMain.c: 153:                   config_ADC_Thermometer ();
  1040  001290  EC74  F00E         	call	_config_ADC_Thermometer	;wreg free
  1041  001294                     
  1042                           ;eSafeMain.c: 154:                   ADCON0 |= 0x02;
  1043  001294  82C2               	bsf	194,1,c	;volatile
  1044  001296                     
  1045                           ;eSafeMain.c: 155:                   _delay((unsigned long)((20)*(4000000L/4000000.0)));
  1046  001296  0E06               	movlw	6
  1047  001298                     u1127:
  1048  001298  2EE8               	decfsz	wreg,f,c
  1049  00129A  D7FE               	bra	u1127
  1050  00129C  D000               	nop2	
  1051  00129E                     
  1052                           ;eSafeMain.c: 156:                   heaterTemperature = ((result_ADC * 5) / 1024) * 100
      +                          ;
  1053  00129E  5057               	movf	_result_ADC^0,w,c
  1054  0012A0  0D05               	mullw	5
  1055  0012A2  CFF3 F012          	movff	prodl,___awdiv@dividend
  1056  0012A6  CFF4 F013          	movff	prodh,___awdiv@dividend+1
  1057  0012AA  0E04               	movlw	4
  1058  0012AC  6E15               	movwf	(___awdiv@divisor+1)^0,c
  1059  0012AE  0E00               	movlw	0
  1060  0012B0  6E14               	movwf	___awdiv@divisor^0,c
  1061  0012B2  EC16  F00C         	call	___awdiv	;wreg free
  1062  0012B6  5012               	movf	?___awdiv^0,w,c
  1063  0012B8  0D64               	mullw	100
  1064  0012BA  CFF3 F025          	movff	prodl,main@heaterTemperature
  1065  0012BE                     
  1066                           ;eSafeMain.c: 157:                   if (heaterTemperature > 40){
  1067  0012BE  0E28               	movlw	40
  1068  0012C0  6425               	cpfsgt	main@heaterTemperature^0,c
  1069  0012C2  EF65  F009         	goto	u1021
  1070  0012C6  EF67  F009         	goto	u1020
  1071  0012CA                     u1021:
  1072  0012CA  EF6B  F009         	goto	l334
  1073  0012CE                     u1020:
  1074  0012CE                     
  1075                           ;eSafeMain.c: 159:                       attemption = 0;
  1076  0012CE  0E00               	movlw	0
  1077  0012D0  6E28               	movwf	main@attemption^0,c
  1078                           
  1079                           ;eSafeMain.c: 160:                       safeState = 5;
  1080  0012D2  0E05               	movlw	5
  1081  0012D4  6E55               	movwf	_safeState^0,c
  1082  0012D6                     l334:
  1083                           
  1084                           ;eSafeMain.c: 163:                   if (downCounter90s == 0){
  1085  0012D6  5043               	movf	_downCounter90s^0,w,c
  1086  0012D8  A4D8               	btfss	status,2,c
  1087  0012DA  EF71  F009         	goto	u1031
  1088  0012DE  EF73  F009         	goto	u1030
  1089  0012E2                     u1031:
  1090  0012E2  EF77  F009         	goto	l2420
  1091  0012E6                     u1030:
  1092  0012E6                     
  1093                           ;eSafeMain.c: 165:                       attemption = 0;
  1094  0012E6  0E00               	movlw	0
  1095  0012E8  6E28               	movwf	main@attemption^0,c
  1096                           
  1097                           ;eSafeMain.c: 166:                       safeState = 5;
  1098  0012EA  0E05               	movlw	5
  1099  0012EC  6E55               	movwf	_safeState^0,c
  1100  0012EE                     l2420:
  1101                           
  1102                           ;eSafeMain.c: 143:           while (digitEntryCount < 4){
  1103  0012EE  0E03               	movlw	3
  1104  0012F0  6458               	cpfsgt	_digitEntryCount^0,c
  1105  0012F2  EF7D  F009         	goto	u1041
  1106  0012F6  EF7F  F009         	goto	u1040
  1107  0012FA                     u1041:
  1108  0012FA  EF32  F009         	goto	l2396
  1109  0012FE                     u1040:
  1110  0012FE                     
  1111                           ;eSafeMain.c: 172:           isValid = passwordCheck();
  1112  0012FE  EC59  F00D         	call	_passwordCheck	;wreg free
  1113  001302  C012  F023         	movff	?_passwordCheck,main@isValid
  1114  001306  C013  F024         	movff	?_passwordCheck+1,main@isValid+1
  1115  00130A                     
  1116                           ;eSafeMain.c: 173:           if (isValid){
  1117  00130A  5023               	movf	main@isValid^0,w,c
  1118  00130C  1024               	iorwf	(main@isValid+1)^0,w,c
  1119  00130E  B4D8               	btfsc	status,2,c
  1120  001310  EF8C  F009         	goto	u1051
  1121  001314  EF8E  F009         	goto	u1050
  1122  001318                     u1051:
  1123  001318  EF94  F009         	goto	l2428
  1124  00131C                     u1050:
  1125  00131C                     
  1126                           ;eSafeMain.c: 175:               attemption = 0;
  1127  00131C  0E00               	movlw	0
  1128  00131E  6E28               	movwf	main@attemption^0,c
  1129                           
  1130                           ;eSafeMain.c: 176:               safeState = 4;
  1131  001320  0E04               	movlw	4
  1132  001322  6E55               	movwf	_safeState^0,c
  1133                           
  1134                           ;eSafeMain.c: 177:           }
  1135  001324  EFAE  F009         	goto	l2440
  1136  001328                     l2428:
  1137                           
  1138                           ;eSafeMain.c: 180:               attemption--;
  1139  001328  0628               	decf	main@attemption^0,f,c
  1140  00132A                     
  1141                           ;eSafeMain.c: 181:               LCDCmd(0x01);
  1142  00132A  0E01               	movlw	1
  1143  00132C  EC41  F00E         	call	_LCDCmd
  1144  001330                     
  1145                           ;eSafeMain.c: 182:               LCDGoto(1, 1);
  1146  001330  0E01               	movlw	1
  1147  001332  6E14               	movwf	LCDGoto@p_1^0,c
  1148  001334  0E01               	movlw	1
  1149  001336  ECA1  F00D         	call	_LCDGoto
  1150  00133A                     
  1151                           ;eSafeMain.c: 184:               LCDStr("Try Again:");
  1152  00133A  0E69               	movlw	low STR_6
  1153  00133C  6E16               	movwf	LCDStr@str^0,c
  1154  00133E  0E10               	movlw	high STR_6
  1155  001340  6E17               	movwf	(LCDStr@str+1)^0,c
  1156  001342  ECDA  F00C         	call	_LCDStr	;wreg free
  1157  001346                     
  1158                           ;eSafeMain.c: 185:               LCDGoto(1, 2);
  1159  001346  0E02               	movlw	2
  1160  001348  6E14               	movwf	LCDGoto@p_1^0,c
  1161  00134A  0E01               	movlw	1
  1162  00134C  ECA1  F00D         	call	_LCDGoto
  1163  001350                     
  1164                           ;eSafeMain.c: 186:               LCDStr("__-__-__");
  1165  001350  0E74               	movlw	low STR_3
  1166  001352  6E16               	movwf	LCDStr@str^0,c
  1167  001354  0E10               	movlw	high STR_3
  1168  001356  6E17               	movwf	(LCDStr@str+1)^0,c
  1169  001358  ECDA  F00C         	call	_LCDStr	;wreg free
  1170  00135C                     l2440:
  1171                           
  1172                           ;eSafeMain.c: 116:       while (attemption){
  1173  00135C  5028               	movf	main@attemption^0,w,c
  1174  00135E  A4D8               	btfss	status,2,c
  1175  001360  EFB4  F009         	goto	u1061
  1176  001364  EFB6  F009         	goto	u1060
  1177  001368                     u1061:
  1178  001368  EF15  F009         	goto	l2392
  1179  00136C                     u1060:
  1180  00136C                     
  1181                           ;eSafeMain.c: 192:       TMR0ON = 0;
  1182  00136C  9ED5               	bcf	4053,7,c	;volatile
  1183  00136E                     
  1184                           ;eSafeMain.c: 193:       displayData[0] = 10;
  1185  00136E  0E0A               	movlw	10
  1186  001370  6E44               	movwf	_displayData^0,c
  1187                           
  1188                           ;eSafeMain.c: 194:       displayData[1] = 10;
  1189  001372  0E0A               	movlw	10
  1190  001374  6E45               	movwf	(_displayData+1)^0,c
  1191                           
  1192                           ;eSafeMain.c: 195:       displayData[2] = 10;
  1193  001376  0E0A               	movlw	10
  1194  001378  6E46               	movwf	(_displayData+2)^0,c
  1195                           
  1196                           ;eSafeMain.c: 196:       displayData[3] = 10;
  1197  00137A  0E0A               	movlw	10
  1198  00137C  6E47               	movwf	(_displayData+3)^0,c
  1199                           
  1200                           ;eSafeMain.c: 198:       blinkEnable = 0;
  1201  00137E  0E00               	movlw	0
  1202  001380  6E52               	movwf	_blinkEnable^0,c
  1203                           
  1204                           ;eSafeMain.c: 199:       PORTB &= 0x00;
  1205  001382  0E00               	movlw	0
  1206  001384  6E81               	movwf	129,c	;volatile
  1207                           
  1208                           ;eSafeMain.c: 200:       TRISB = 0x11;
  1209  001386  0E11               	movlw	17
  1210  001388  6E93               	movwf	147,c	;volatile
  1211  00138A                     
  1212                           ;eSafeMain.c: 202:       RC5 = 0;
  1213  00138A  9A82               	bcf	3970,5,c	;volatile
  1214  00138C                     
  1215                           ;eSafeMain.c: 204:       ADIE = 0;
  1216  00138C  9C9D               	bcf	3997,6,c	;volatile
  1217  00138E                     
  1218                           ;eSafeMain.c: 205:       INT0IE = 0;
  1219  00138E  98F2               	bcf	4082,4,c	;volatile
  1220  001390                     
  1221                           ;eSafeMain.c: 206:       RBIE = 0;
  1222  001390  96F2               	bcf	4082,3,c	;volatile
  1223  001392                     
  1224                           ;eSafeMain.c: 207:       TMR0IE = 0;
  1225  001392  9AF2               	bcf	4082,5,c	;volatile
  1226  001394                     
  1227                           ;eSafeMain.c: 208:       TMR1IE = 0;
  1228  001394  909D               	bcf	3997,0,c	;volatile
  1229  001396                     
  1230                           ;eSafeMain.c: 209:       TMR0ON = 0;
  1231  001396  9ED5               	bcf	4053,7,c	;volatile
  1232  001398                     
  1233                           ;eSafeMain.c: 210:       TMR0ON = 0;
  1234  001398  9ED5               	bcf	4053,7,c	;volatile
  1235  00139A                     
  1236                           ;eSafeMain.c: 212:       if (safeState == 4){
  1237  00139A  0E04               	movlw	4
  1238  00139C  1855               	xorwf	_safeState^0,w,c
  1239  00139E  A4D8               	btfss	status,2,c
  1240  0013A0  EFD4  F009         	goto	u1071
  1241  0013A4  EFD6  F009         	goto	u1070
  1242  0013A8                     u1071:
  1243  0013A8  EFF1  F009         	goto	l2472
  1244  0013AC                     u1070:
  1245  0013AC                     
  1246                           ;eSafeMain.c: 213:           LCDCmd(0x01);
  1247  0013AC  0E01               	movlw	1
  1248  0013AE  EC41  F00E         	call	_LCDCmd
  1249  0013B2                     
  1250                           ;eSafeMain.c: 214:           LCDGoto(1, 1);
  1251  0013B2  0E01               	movlw	1
  1252  0013B4  6E14               	movwf	LCDGoto@p_1^0,c
  1253  0013B6  0E01               	movlw	1
  1254  0013B8  ECA1  F00D         	call	_LCDGoto
  1255  0013BC                     
  1256                           ;eSafeMain.c: 215:           LCDStr("Unlocked; Press");
  1257  0013BC  0E32               	movlw	low STR_8
  1258  0013BE  6E16               	movwf	LCDStr@str^0,c
  1259  0013C0  0E10               	movlw	high STR_8
  1260  0013C2  6E17               	movwf	(LCDStr@str+1)^0,c
  1261  0013C4  ECDA  F00C         	call	_LCDStr	;wreg free
  1262  0013C8                     
  1263                           ;eSafeMain.c: 216:           LCDGoto(1, 2);
  1264  0013C8  0E02               	movlw	2
  1265  0013CA  6E14               	movwf	LCDGoto@p_1^0,c
  1266  0013CC  0E01               	movlw	1
  1267  0013CE  ECA1  F00D         	call	_LCDGoto
  1268  0013D2                     
  1269                           ;eSafeMain.c: 217:           LCDStr("RB4 to lock!");
  1270  0013D2  0E50               	movlw	low STR_9
  1271  0013D4  6E16               	movwf	LCDStr@str^0,c
  1272  0013D6  0E10               	movlw	high STR_9
  1273  0013D8  6E17               	movwf	(LCDStr@str+1)^0,c
  1274  0013DA  ECDA  F00C         	call	_LCDStr	;wreg free
  1275                           
  1276                           ;eSafeMain.c: 218:       }
  1277  0013DE  EFFF  F009         	goto	l2478
  1278  0013E2                     l2472:
  1279                           
  1280                           ;eSafeMain.c: 221:           LCDCmd(0x01);
  1281  0013E2  0E01               	movlw	1
  1282  0013E4  EC41  F00E         	call	_LCDCmd
  1283  0013E8                     
  1284                           ;eSafeMain.c: 222:           LCDGoto(1, 1);
  1285  0013E8  0E01               	movlw	1
  1286  0013EA  6E14               	movwf	LCDGoto@p_1^0,c
  1287  0013EC  0E01               	movlw	1
  1288  0013EE  ECA1  F00D         	call	_LCDGoto
  1289  0013F2                     
  1290                           ;eSafeMain.c: 223:           LCDStr("You Failed!");
  1291  0013F2  0E5D               	movlw	low STR_10
  1292  0013F4  6E16               	movwf	LCDStr@str^0,c
  1293  0013F6  0E10               	movlw	high STR_10
  1294  0013F8  6E17               	movwf	(LCDStr@str+1)^0,c
  1295  0013FA  ECDA  F00C         	call	_LCDStr	;wreg free
  1296  0013FE                     l2478:
  1297                           
  1298                           ;eSafeMain.c: 228:       lockAgain = 0;
  1299  0013FE  0E00               	movlw	0
  1300  001400  6E53               	movwf	_lockAgain^0,c
  1301  001402                     
  1302                           ;eSafeMain.c: 229:       TRISB = 0x13;
  1303  001402  0E13               	movlw	19
  1304  001404  6E93               	movwf	147,c	;volatile
  1305  001406                     
  1306                           ;eSafeMain.c: 231:       INT1IE = 1;
  1307  001406  86F0               	bsf	4080,3,c	;volatile
  1308  001408                     
  1309                           ;eSafeMain.c: 232:       INT2IE = 1;
  1310  001408  88F0               	bsf	4080,4,c	;volatile
  1311  00140A                     l2486:
  1312                           
  1313                           ;eSafeMain.c: 234:       while(!lockAgain){
  1314  00140A  5053               	movf	_lockAgain^0,w,c
  1315  00140C  B4D8               	btfsc	status,2,c
  1316  00140E  EF0B  F00A         	goto	u1081
  1317  001412  EF0D  F00A         	goto	u1080
  1318  001416                     u1081:
  1319  001416  EF05  F00A         	goto	l2486
  1320  00141A                     u1080:
  1321  00141A                     
  1322                           ;eSafeMain.c: 238:       LCDCmd(0x01);
  1323  00141A  0E01               	movlw	1
  1324  00141C  EC41  F00E         	call	_LCDCmd
  1325  001420                     
  1326                           ;eSafeMain.c: 239:       LCDGoto(1, 1);
  1327  001420  0E01               	movlw	1
  1328  001422  6E14               	movwf	LCDGoto@p_1^0,c
  1329  001424  0E01               	movlw	1
  1330  001426  ECA1  F00D         	call	_LCDGoto
  1331  00142A                     
  1332                           ;eSafeMain.c: 240:       LCDStr("Safe is Locked!");
  1333  00142A  0E12               	movlw	low STR_11
  1334  00142C  6E16               	movwf	LCDStr@str^0,c
  1335  00142E  0E10               	movlw	high STR_11
  1336  001430  6E17               	movwf	(LCDStr@str+1)^0,c
  1337  001432  ECDA  F00C         	call	_LCDStr	;wreg free
  1338  001436                     
  1339                           ;eSafeMain.c: 241:       delayWithTimer2 (3000);
  1340  001436  0E0B               	movlw	11
  1341  001438  6E13               	movwf	(delayWithTimer2@milliseconds+1)^0,c
  1342  00143A  0EB8               	movlw	184
  1343  00143C  6E12               	movwf	delayWithTimer2@milliseconds^0,c
  1344  00143E  ECD4  F00D         	call	_delayWithTimer2	;wreg free
  1345  001442  EF4D  F008         	goto	l2302
  1346  001446  EF07  F000         	goto	start
  1347  00144A                     __end_of_main:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _passwordCheck *****************
  1351 ;; Defined at:
  1352 ;;		line 252 in file "eSafeMain.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  n               1   21[COMRAM] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2   17[COMRAM] int 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:        5 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 2
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text1
  1381  001AB2                     __ptext1:
  1382                           	callstack 0
  1383  001AB2                     _passwordCheck:
  1384                           	callstack 28
  1385  001AB2                     
  1386                           ;eSafeMain.c: 253:     byte n;;eSafeMain.c: 255:     for (n = 0; n < 3; n++){
  1387  001AB2  0E00               	movlw	0
  1388  001AB4  6E16               	movwf	passwordCheck@n^0,c
  1389  001AB6                     l2058:
  1390                           
  1391                           ;eSafeMain.c: 256:         if (passwordsSet[n] != passwordsAttempt[n]){
  1392  001AB6  0E4B               	movlw	low _passwordsAttempt
  1393  001AB8  2416               	addwf	passwordCheck@n^0,w,c
  1394  001ABA  6ED9               	movwf	fsr2l,c
  1395  001ABC  6ADA               	clrf	fsr2h,c
  1396  001ABE  0E00               	movlw	high _passwordsAttempt
  1397  001AC0  22DA               	addwfc	fsr2h,f,c
  1398  001AC2  0E48               	movlw	low _passwordsSet
  1399  001AC4  2416               	addwf	passwordCheck@n^0,w,c
  1400  001AC6  6EE1               	movwf	fsr1l,c
  1401  001AC8  6AE2               	clrf	fsr1h,c
  1402  001ACA  0E00               	movlw	high _passwordsSet
  1403  001ACC  22E2               	addwfc	fsr1h,f,c
  1404  001ACE  50DE               	movf	postinc2,w,c
  1405  001AD0  18E6               	xorwf	postinc1,w,c
  1406  001AD2  B4D8               	btfsc	status,2,c
  1407  001AD4  EF6E  F00D         	goto	u671
  1408  001AD8  EF70  F00D         	goto	u670
  1409  001ADC                     u671:
  1410  001ADC  EF76  F00D         	goto	l2064
  1411  001AE0                     u670:
  1412  001AE0                     
  1413                           ;eSafeMain.c: 257:             return 0;
  1414  001AE0  0E00               	movlw	0
  1415  001AE2  6E13               	movwf	(?_passwordCheck+1)^0,c
  1416  001AE4  0E00               	movlw	0
  1417  001AE6  6E12               	movwf	?_passwordCheck^0,c
  1418  001AE8  EF83  F00D         	goto	l353
  1419  001AEC                     l2064:
  1420                           
  1421                           ;eSafeMain.c: 259:     }
  1422  001AEC  2A16               	incf	passwordCheck@n^0,f,c
  1423  001AEE  0E02               	movlw	2
  1424  001AF0  6416               	cpfsgt	passwordCheck@n^0,c
  1425  001AF2  EF7D  F00D         	goto	u681
  1426  001AF6  EF7F  F00D         	goto	u680
  1427  001AFA                     u681:
  1428  001AFA  EF5B  F00D         	goto	l2058
  1429  001AFE                     u680:
  1430  001AFE                     
  1431                           ;eSafeMain.c: 260:     return 1;
  1432  001AFE  0E00               	movlw	0
  1433  001B00  6E13               	movwf	(?_passwordCheck+1)^0,c
  1434  001B02  0E01               	movlw	1
  1435  001B04  6E12               	movwf	?_passwordCheck^0,c
  1436  001B06                     l353:
  1437  001B06  0012               	return		;funcret
  1438  001B08                     __end_of_passwordCheck:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _init_TIMER2 *****************
  1442 ;; Defined at:
  1443 ;;		line 92 in file "./timers.h"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 2
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text2
  1472  001C42                     __ptext2:
  1473                           	callstack 0
  1474  001C42                     _init_TIMER2:
  1475                           	callstack 28
  1476  001C42                     
  1477                           ;./timers.h: 94:     T2CON = 0x7B;
  1478  001C42  0E7B               	movlw	123
  1479  001C44  6ECA               	movwf	202,c	;volatile
  1480                           
  1481                           ;./timers.h: 95:     PR2 = 0x28;
  1482  001C46  0E28               	movlw	40
  1483  001C48  6ECB               	movwf	203,c	;volatile
  1484                           
  1485                           ;./timers.h: 96:     TMR2 = 0x00;
  1486  001C4A  0E00               	movlw	0
  1487  001C4C  6ECC               	movwf	204,c	;volatile
  1488  001C4E                     
  1489                           ;./timers.h: 97:     PIR1bits.TMR2IF = 0;
  1490  001C4E  929E               	bcf	158,1,c	;volatile
  1491  001C50                     
  1492                           ;./timers.h: 98:     TMR2ON = 0;
  1493  001C50  94CA               	bcf	4042,2,c	;volatile
  1494  001C52                     
  1495                           ;./timers.h: 99:     TMR2IE = 1;
  1496  001C52  829D               	bsf	3997,1,c	;volatile
  1497  001C54                     
  1498                           ;./timers.h: 100:     GIE = 1;
  1499  001C54  8EF2               	bsf	4082,7,c	;volatile
  1500  001C56                     
  1501                           ;./timers.h: 101:     PEIE = 1;
  1502  001C56  8CF2               	bsf	4082,6,c	;volatile
  1503                           
  1504                           ;./timers.h: 102:     TMR2Counter = 0;
  1505  001C58  0E00               	movlw	0
  1506  001C5A  6E4F               	movwf	(_TMR2Counter+1)^0,c
  1507  001C5C  0E00               	movlw	0
  1508  001C5E  6E4E               	movwf	_TMR2Counter^0,c
  1509  001C60  0012               	return		;funcret
  1510  001C62                     __end_of_init_TIMER2:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _init_TIMER1 *****************
  1514 ;; Defined at:
  1515 ;;		line 60 in file "./timers.h"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 2
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text3
  1544  001CBC                     __ptext3:
  1545                           	callstack 0
  1546  001CBC                     _init_TIMER1:
  1547                           	callstack 28
  1548  001CBC                     
  1549                           ;./timers.h: 62:     T1CON = 0;
  1550  001CBC  0E00               	movlw	0
  1551  001CBE  6ECD               	movwf	205,c	;volatile
  1552  001CC0                     
  1553                           ;./timers.h: 63:     TMR1ON = 0;
  1554  001CC0  90CD               	bcf	4045,0,c	;volatile
  1555  001CC2                     
  1556                           ;./timers.h: 64:     T1OSCEN = 0;
  1557  001CC2  96CD               	bcf	4045,3,c	;volatile
  1558  001CC4                     
  1559                           ;./timers.h: 65:     TMR1CS = 0;
  1560  001CC4  92CD               	bcf	4045,1,c	;volatile
  1561  001CC6                     
  1562                           ;./timers.h: 67:     T1CKPS0 = 0;
  1563  001CC6  98CD               	bcf	4045,4,c	;volatile
  1564  001CC8                     
  1565                           ;./timers.h: 68:     T1CKPS1 = 1;
  1566  001CC8  8ACD               	bsf	4045,5,c	;volatile
  1567  001CCA                     
  1568                           ;./timers.h: 69:     TMR1IE = 1;
  1569  001CCA  809D               	bsf	3997,0,c	;volatile
  1570  001CCC                     
  1571                           ;./timers.h: 70:     GIE = 1;
  1572  001CCC  8EF2               	bsf	4082,7,c	;volatile
  1573  001CCE                     
  1574                           ;./timers.h: 71:     PEIE = 1;
  1575  001CCE  8CF2               	bsf	4082,6,c	;volatile
  1576  001CD0  0012               	return		;funcret
  1577  001CD2                     __end_of_init_TIMER1:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _init_TIMER0 *****************
  1581 ;; Defined at:
  1582 ;;		line 40 in file "./timers.h"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text4
  1611  001C20                     __ptext4:
  1612                           	callstack 0
  1613  001C20                     _init_TIMER0:
  1614                           	callstack 28
  1615  001C20                     
  1616                           ;./timers.h: 41:     T0CON = 0;
  1617  001C20  0E00               	movlw	0
  1618  001C22  6ED5               	movwf	213,c	;volatile
  1619  001C24                     
  1620                           ;./timers.h: 42:     TMR0ON = 0;
  1621  001C24  9ED5               	bcf	4053,7,c	;volatile
  1622  001C26                     
  1623                           ;./timers.h: 43:     T08BIT = 0;
  1624  001C26  9CD5               	bcf	4053,6,c	;volatile
  1625  001C28                     
  1626                           ;./timers.h: 44:     T0CS = 0;
  1627  001C28  9AD5               	bcf	4053,5,c	;volatile
  1628  001C2A                     
  1629                           ;./timers.h: 45:     PSA = 0;
  1630  001C2A  96D5               	bcf	4053,3,c	;volatile
  1631  001C2C                     
  1632                           ;./timers.h: 46:     T0PS0 = 0;
  1633  001C2C  90D5               	bcf	4053,0,c	;volatile
  1634  001C2E                     
  1635                           ;./timers.h: 47:     T0PS1 = 1;
  1636  001C2E  82D5               	bsf	4053,1,c	;volatile
  1637  001C30                     
  1638                           ;./timers.h: 48:     T0PS2 = 1;
  1639  001C30  84D5               	bsf	4053,2,c	;volatile
  1640  001C32                     
  1641                           ;./timers.h: 49:     TMR0IE = 1;
  1642  001C32  8AF2               	bsf	4082,5,c	;volatile
  1643  001C34                     
  1644                           ;./timers.h: 50:     GIE = 1;
  1645  001C34  8EF2               	bsf	4082,7,c	;volatile
  1646  001C36                     
  1647                           ;./timers.h: 51:     PEIE = 1;
  1648  001C36  8CF2               	bsf	4082,6,c	;volatile
  1649  001C38                     
  1650                           ;./timers.h: 53:     TMR0H = (unsigned char)(TIM0LOAD >> 8);
  1651  001C38  C03E  FFD7         	movff	_TIM0LOAD+1,4055	;volatile
  1652  001C3C                     
  1653                           ;./timers.h: 54:     TMR0L = (unsigned char)(TIM0LOAD - (TMR1H << 8));
  1654  001C3C  C03D  FFD6         	movff	_TIM0LOAD,4054	;volatile
  1655  001C40  0012               	return		;funcret
  1656  001C42                     __end_of_init_TIMER0:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _init_PORTB *****************
  1660 ;; Defined at:
  1661 ;;		line 310 in file "eSafeMain.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		None
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 2
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text5
  1690  001CD2                     __ptext5:
  1691                           	callstack 0
  1692  001CD2                     _init_PORTB:
  1693                           	callstack 28
  1694  001CD2                     
  1695                           ;eSafeMain.c: 312:     TRISB = 0xFF;
  1696  001CD2  6893               	setf	147,c	;volatile
  1697                           
  1698                           ;eSafeMain.c: 313:     RBPU = 1;
  1699  001CD4  8EF1               	bsf	4081,7,c	;volatile
  1700                           
  1701                           ;eSafeMain.c: 314:     INTEDG0 = 0;
  1702  001CD6  9CF1               	bcf	4081,6,c	;volatile
  1703                           
  1704                           ;eSafeMain.c: 315:     INTEDG1 = 0;
  1705  001CD8  9AF1               	bcf	4081,5,c	;volatile
  1706                           
  1707                           ;eSafeMain.c: 316:     RBIP = 1;
  1708  001CDA  80F1               	bsf	4081,0,c	;volatile
  1709                           
  1710                           ;eSafeMain.c: 317:     INT0IE = 1;
  1711  001CDC  88F2               	bsf	4082,4,c	;volatile
  1712                           
  1713                           ;eSafeMain.c: 318:     RBIE = 0;
  1714  001CDE  96F2               	bcf	4082,3,c	;volatile
  1715                           
  1716                           ;eSafeMain.c: 319:     GIE = 1;
  1717  001CE0  8EF2               	bsf	4082,7,c	;volatile
  1718                           
  1719                           ;eSafeMain.c: 320:     PEIE = 1;
  1720  001CE2  8CF2               	bsf	4082,6,c	;volatile
  1721                           
  1722                           ;eSafeMain.c: 322:     INT1IE = 0;
  1723  001CE4  96F0               	bcf	4080,3,c	;volatile
  1724  001CE6  0012               	return		;funcret
  1725  001CE8                     __end_of_init_PORTB:
  1726                           	callstack 0
  1727                           
  1728 ;; *************** function _init_Clock *****************
  1729 ;; Defined at:
  1730 ;;		line 327 in file "eSafeMain.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		None
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 2
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text6
  1759  001D0A                     __ptext6:
  1760                           	callstack 0
  1761  001D0A                     _init_Clock:
  1762                           	callstack 28
  1763  001D0A                     
  1764                           ;eSafeMain.c: 328:      PLLEN = 0;
  1765  001D0A  9C9B               	bcf	3995,6,c	;volatile
  1766                           
  1767                           ;eSafeMain.c: 330:      IRCF2 = 1;
  1768  001D0C  8CD3               	bsf	4051,6,c	;volatile
  1769                           
  1770                           ;eSafeMain.c: 331:      IRCF1 = 1;
  1771  001D0E  8AD3               	bsf	4051,5,c	;volatile
  1772                           
  1773                           ;eSafeMain.c: 332:      IRCF0 = 1;
  1774  001D10  88D3               	bsf	4051,4,c	;volatile
  1775  001D12  0012               	return		;funcret
  1776  001D14                     __end_of_init_Clock:
  1777                           	callstack 0
  1778                           
  1779 ;; *************** function _init_ADC_Thermometer *****************
  1780 ;; Defined at:
  1781 ;;		line 47 in file "./adc.h"
  1782 ;; Parameters:    Size  Location     Type
  1783 ;;		None
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;		None
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;Total ram usage:        0 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 2
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text7
  1810  001BD4                     __ptext7:
  1811                           	callstack 0
  1812  001BD4                     _init_ADC_Thermometer:
  1813                           	callstack 28
  1814  001BD4                     
  1815                           ;./adc.h: 48:     TRISA = 0x04;
  1816  001BD4  0E04               	movlw	4
  1817  001BD6  6E92               	movwf	146,c	;volatile
  1818                           
  1819                           ;./adc.h: 49:     ADCON0 = 0x09;
  1820  001BD8  0E09               	movlw	9
  1821  001BDA  6EC2               	movwf	194,c	;volatile
  1822                           
  1823                           ;./adc.h: 50:     ADCON1 = 0x0A;
  1824  001BDC  0E0A               	movlw	10
  1825  001BDE  6EC1               	movwf	193,c	;volatile
  1826                           
  1827                           ;./adc.h: 51:     ADCON2 = 0xBE;
  1828  001BE0  0EBE               	movlw	190
  1829  001BE2  6EC0               	movwf	192,c	;volatile
  1830                           
  1831                           ;./adc.h: 52:     ADRESH = 0;
  1832  001BE4  0E00               	movlw	0
  1833  001BE6  6EC4               	movwf	196,c	;volatile
  1834                           
  1835                           ;./adc.h: 53:     ADRESL = 0;
  1836  001BE8  0E00               	movlw	0
  1837  001BEA  6EC3               	movwf	195,c	;volatile
  1838  001BEC                     
  1839                           ;./adc.h: 55:     GIE = 1;
  1840  001BEC  8EF2               	bsf	4082,7,c	;volatile
  1841  001BEE                     
  1842                           ;./adc.h: 56:     PEIE = 1;
  1843  001BEE  8CF2               	bsf	4082,6,c	;volatile
  1844  001BF0                     
  1845                           ;./adc.h: 57:     IPEN = 0;
  1846  001BF0  9ED0               	bcf	4048,7,c	;volatile
  1847  001BF2                     
  1848                           ;./adc.h: 58:     ADIE = 1;
  1849  001BF2  8C9D               	bsf	3997,6,c	;volatile
  1850  001BF4                     
  1851                           ;./adc.h: 59:     ADIP = 1;
  1852  001BF4  8C9F               	bsf	3999,6,c	;volatile
  1853  001BF6                     
  1854                           ;./adc.h: 60:     ADIF = 0;
  1855  001BF6  9C9E               	bcf	3998,6,c	;volatile
  1856  001BF8  0012               	return		;funcret
  1857  001BFA                     __end_of_init_ADC_Thermometer:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _init_ADC_Potentiometer *****************
  1861 ;; Defined at:
  1862 ;;		line 14 in file "./adc.h"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 2
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text8
  1891  001BFA                     __ptext8:
  1892                           	callstack 0
  1893  001BFA                     _init_ADC_Potentiometer:
  1894                           	callstack 28
  1895  001BFA                     
  1896                           ;./adc.h: 15:     TRISA = 0x01;
  1897  001BFA  0E01               	movlw	1
  1898  001BFC  6E92               	movwf	146,c	;volatile
  1899                           
  1900                           ;./adc.h: 16:     ADCON0 = 0x01;
  1901  001BFE  0E01               	movlw	1
  1902  001C00  6EC2               	movwf	194,c	;volatile
  1903                           
  1904                           ;./adc.h: 17:     ADCON1 = 0x0E;
  1905  001C02  0E0E               	movlw	14
  1906  001C04  6EC1               	movwf	193,c	;volatile
  1907                           
  1908                           ;./adc.h: 18:     ADCON2 = 0xBE;
  1909  001C06  0EBE               	movlw	190
  1910  001C08  6EC0               	movwf	192,c	;volatile
  1911                           
  1912                           ;./adc.h: 19:     ADRESH = 0;
  1913  001C0A  0E00               	movlw	0
  1914  001C0C  6EC4               	movwf	196,c	;volatile
  1915                           
  1916                           ;./adc.h: 20:     ADRESL = 0;
  1917  001C0E  0E00               	movlw	0
  1918  001C10  6EC3               	movwf	195,c	;volatile
  1919  001C12                     
  1920                           ;./adc.h: 22:     GIE = 1;
  1921  001C12  8EF2               	bsf	4082,7,c	;volatile
  1922  001C14                     
  1923                           ;./adc.h: 23:     PEIE = 1;
  1924  001C14  8CF2               	bsf	4082,6,c	;volatile
  1925  001C16                     
  1926                           ;./adc.h: 24:     IPEN = 0;
  1927  001C16  9ED0               	bcf	4048,7,c	;volatile
  1928  001C18                     
  1929                           ;./adc.h: 25:     ADIE = 1;
  1930  001C18  8C9D               	bsf	3997,6,c	;volatile
  1931  001C1A                     
  1932                           ;./adc.h: 26:     ADIP = 1;
  1933  001C1A  8C9F               	bsf	3999,6,c	;volatile
  1934  001C1C                     
  1935                           ;./adc.h: 27:     ADIF = 0;
  1936  001C1C  9C9E               	bcf	3998,6,c	;volatile
  1937  001C1E  0012               	return		;funcret
  1938  001C20                     __end_of_init_ADC_Potentiometer:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function _displayNumbers *****************
  1942 ;; Defined at:
  1943 ;;		line 264 in file "eSafeMain.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  value           2   25[COMRAM] unsigned int 
  1946 ;;  digitNo         1   27[COMRAM] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  digitH          1   31[COMRAM] unsigned char 
  1949 ;;  digitL          1   30[COMRAM] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        7 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 4
  1966 ;; This function calls:
  1967 ;;		_LCDDat
  1968 ;;		_LCDGoto
  1969 ;;		___awdiv
  1970 ;; This function is called by:
  1971 ;;		_main
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text9
  1976  001758                     __ptext9:
  1977                           	callstack 0
  1978  001758                     _displayNumbers:
  1979                           	callstack 26
  1980  001758                     
  1981                           ;eSafeMain.c: 265:     byte digitH, digitL;;eSafeMain.c: 267:     TRISD = 0;
  1982  001758  0E00               	movlw	0
  1983  00175A  6E95               	movwf	149,c	;volatile
  1984  00175C                     
  1985                           ;eSafeMain.c: 269:     if (value >= 100){
  1986  00175C  501B               	movf	(displayNumbers@value+1)^0,w,c
  1987  00175E  E109               	bnz	u660
  1988  001760  0E64               	movlw	100
  1989  001762  5C1A               	subwf	displayNumbers@value^0,w,c
  1990  001764  A0D8               	btfss	status,0,c
  1991  001766  EFB7  F00B         	goto	u661
  1992  00176A  EFB9  F00B         	goto	u660
  1993  00176E                     u661:
  1994  00176E  EFBF  F00B         	goto	l2018
  1995  001772                     u660:
  1996  001772                     
  1997                           ;eSafeMain.c: 271:         digitH = 'X';
  1998  001772  0E58               	movlw	88
  1999  001774  6E20               	movwf	displayNumbers@digitH^0,c
  2000                           
  2001                           ;eSafeMain.c: 272:         digitL = 'X';
  2002  001776  0E58               	movlw	88
  2003  001778  6E1F               	movwf	displayNumbers@digitL^0,c
  2004                           
  2005                           ;eSafeMain.c: 273:     }
  2006  00177A  EFFC  F00B         	goto	l2046
  2007  00177E                     l2018:
  2008                           
  2009                           ;eSafeMain.c: 276:         digitH = (byte)value / 10;
  2010  00177E  C01A  F012         	movff	displayNumbers@value,___awdiv@dividend
  2011  001782  6A13               	clrf	(___awdiv@dividend+1)^0,c
  2012  001784  0E00               	movlw	0
  2013  001786  6E15               	movwf	(___awdiv@divisor+1)^0,c
  2014  001788  0E0A               	movlw	10
  2015  00178A  6E14               	movwf	___awdiv@divisor^0,c
  2016  00178C  EC16  F00C         	call	___awdiv	;wreg free
  2017  001790  5012               	movf	?___awdiv^0,w,c
  2018  001792  6E20               	movwf	displayNumbers@digitH^0,c
  2019  001794                     
  2020                           ;eSafeMain.c: 277:         digitL = (byte)(value - (digitH * 10));
  2021  001794  5020               	movf	displayNumbers@digitH^0,w,c
  2022  001796  0DF6               	mullw	246
  2023  001798  50F3               	movf	243,w,c
  2024  00179A  241A               	addwf	displayNumbers@value^0,w,c
  2025  00179C  6E1F               	movwf	displayNumbers@digitL^0,c
  2026  00179E                     
  2027                           ;eSafeMain.c: 278:         digitH += 0x30;
  2028  00179E  0E30               	movlw	48
  2029  0017A0  2620               	addwf	displayNumbers@digitH^0,f,c
  2030  0017A2                     
  2031                           ;eSafeMain.c: 279:         digitL += 0x30;
  2032  0017A2  0E30               	movlw	48
  2033  0017A4  261F               	addwf	displayNumbers@digitL^0,f,c
  2034  0017A6  EFFC  F00B         	goto	l2046
  2035  0017AA                     l2026:
  2036                           
  2037                           ;eSafeMain.c: 289:          LCDGoto(1,2);
  2038  0017AA  0E02               	movlw	2
  2039  0017AC  6E14               	movwf	LCDGoto@p_1^0,c
  2040  0017AE  0E01               	movlw	1
  2041  0017B0  ECA1  F00D         	call	_LCDGoto
  2042  0017B4                     
  2043                           ;eSafeMain.c: 290:          LCDDat(digitH);
  2044  0017B4  5020               	movf	displayNumbers@digitH^0,w,c
  2045  0017B6  EC31  F00E         	call	_LCDDat
  2046  0017BA                     
  2047                           ;eSafeMain.c: 291:          LCDDat(digitL);
  2048  0017BA  501F               	movf	displayNumbers@digitL^0,w,c
  2049  0017BC  EC31  F00E         	call	_LCDDat
  2050                           
  2051                           ;eSafeMain.c: 292:          break;
  2052  0017C0  EF15  F00C         	goto	l364
  2053  0017C4                     l2032:
  2054                           
  2055                           ;eSafeMain.c: 294:          LCDGoto(4,2);
  2056  0017C4  0E02               	movlw	2
  2057  0017C6  6E14               	movwf	LCDGoto@p_1^0,c
  2058  0017C8  0E04               	movlw	4
  2059  0017CA  ECA1  F00D         	call	_LCDGoto
  2060  0017CE                     
  2061                           ;eSafeMain.c: 295:          LCDDat(digitH);
  2062  0017CE  5020               	movf	displayNumbers@digitH^0,w,c
  2063  0017D0  EC31  F00E         	call	_LCDDat
  2064  0017D4                     
  2065                           ;eSafeMain.c: 296:          LCDDat(digitL);
  2066  0017D4  501F               	movf	displayNumbers@digitL^0,w,c
  2067  0017D6  EC31  F00E         	call	_LCDDat
  2068                           
  2069                           ;eSafeMain.c: 297:          break;
  2070  0017DA  EF15  F00C         	goto	l364
  2071  0017DE                     l2038:
  2072                           
  2073                           ;eSafeMain.c: 299:          LCDGoto(7,2);
  2074  0017DE  0E02               	movlw	2
  2075  0017E0  6E14               	movwf	LCDGoto@p_1^0,c
  2076  0017E2  0E07               	movlw	7
  2077  0017E4  ECA1  F00D         	call	_LCDGoto
  2078  0017E8                     
  2079                           ;eSafeMain.c: 300:          LCDDat(digitH);
  2080  0017E8  5020               	movf	displayNumbers@digitH^0,w,c
  2081  0017EA  EC31  F00E         	call	_LCDDat
  2082  0017EE                     
  2083                           ;eSafeMain.c: 301:          LCDDat(digitL);
  2084  0017EE  501F               	movf	displayNumbers@digitL^0,w,c
  2085  0017F0  EC31  F00E         	call	_LCDDat
  2086                           
  2087                           ;eSafeMain.c: 302:          break;
  2088  0017F4  EF15  F00C         	goto	l364
  2089  0017F8                     l2046:
  2090  0017F8  501C               	movf	displayNumbers@digitNo^0,w,c
  2091  0017FA  6E1D               	movwf	??_displayNumbers^0,c
  2092  0017FC  6A1E               	clrf	(??_displayNumbers+1)^0,c
  2093                           
  2094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2095                           ; Switch size 1, requested type "simple"
  2096                           ; Number of cases is 1, Range of values is 0 to 0
  2097                           ; switch strategies available:
  2098                           ; Name         Instructions Cycles
  2099                           ; simple_byte            4     3 (average)
  2100                           ;	Chosen strategy is simple_byte
  2101  0017FE  501E               	movf	(??_displayNumbers+1)^0,w,c
  2102  001800  0A00               	xorlw	0	; case 0
  2103  001802  B4D8               	btfsc	status,2,c
  2104  001804  EF06  F00C         	goto	l2514
  2105  001808  EF15  F00C         	goto	l364
  2106  00180C                     l2514:
  2107                           
  2108                           ; Switch size 1, requested type "simple"
  2109                           ; Number of cases is 3, Range of values is 1 to 3
  2110                           ; switch strategies available:
  2111                           ; Name         Instructions Cycles
  2112                           ; simple_byte           10     6 (average)
  2113                           ;	Chosen strategy is simple_byte
  2114  00180C  501D               	movf	??_displayNumbers^0,w,c
  2115  00180E  0A01               	xorlw	1	; case 1
  2116  001810  B4D8               	btfsc	status,2,c
  2117  001812  EFD5  F00B         	goto	l2026
  2118  001816  0A03               	xorlw	3	; case 2
  2119  001818  B4D8               	btfsc	status,2,c
  2120  00181A  EFE2  F00B         	goto	l2032
  2121  00181E  0A01               	xorlw	1	; case 3
  2122  001820  B4D8               	btfsc	status,2,c
  2123  001822  EFEF  F00B         	goto	l2038
  2124  001826  EF15  F00C         	goto	l364
  2125  00182A                     l364:
  2126  00182A  0012               	return		;funcret
  2127  00182C                     __end_of_displayNumbers:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function ___awdiv *****************
  2131 ;; Defined at:
  2132 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  dividend        2   17[COMRAM] int 
  2135 ;;  divisor         2   19[COMRAM] int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  quotient        2   23[COMRAM] int 
  2138 ;;  sign            1   22[COMRAM] unsigned char 
  2139 ;;  counter         1   21[COMRAM] unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  2   17[COMRAM] int 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        8 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 2
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;;		_displayNumbers
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text10
  2165  00182C                     __ptext10:
  2166                           	callstack 0
  2167  00182C                     ___awdiv:
  2168                           	callstack 27
  2169  00182C  0E00               	movlw	0
  2170  00182E  6E17               	movwf	___awdiv@sign^0,c
  2171  001830  BE15               	btfsc	(___awdiv@divisor+1)^0,7,c
  2172  001832  EF1F  F00C         	goto	u560
  2173  001836  EF1D  F00C         	goto	u561
  2174  00183A                     u561:
  2175  00183A  EF25  F00C         	goto	l1810
  2176  00183E                     u560:
  2177  00183E  6C14               	negf	___awdiv@divisor^0,c
  2178  001840  1E15               	comf	(___awdiv@divisor+1)^0,f,c
  2179  001842  B0D8               	btfsc	status,0,c
  2180  001844  2A15               	incf	(___awdiv@divisor+1)^0,f,c
  2181  001846  0E01               	movlw	1
  2182  001848  6E17               	movwf	___awdiv@sign^0,c
  2183  00184A                     l1810:
  2184  00184A  BE13               	btfsc	(___awdiv@dividend+1)^0,7,c
  2185  00184C  EF2C  F00C         	goto	u570
  2186  001850  EF2A  F00C         	goto	u571
  2187  001854                     u571:
  2188  001854  EF32  F00C         	goto	l1816
  2189  001858                     u570:
  2190  001858  6C12               	negf	___awdiv@dividend^0,c
  2191  00185A  1E13               	comf	(___awdiv@dividend+1)^0,f,c
  2192  00185C  B0D8               	btfsc	status,0,c
  2193  00185E  2A13               	incf	(___awdiv@dividend+1)^0,f,c
  2194  001860  0E01               	movlw	1
  2195  001862  1A17               	xorwf	___awdiv@sign^0,f,c
  2196  001864                     l1816:
  2197  001864  0E00               	movlw	0
  2198  001866  6E19               	movwf	(___awdiv@quotient+1)^0,c
  2199  001868  0E00               	movlw	0
  2200  00186A  6E18               	movwf	___awdiv@quotient^0,c
  2201  00186C  5014               	movf	___awdiv@divisor^0,w,c
  2202  00186E  1015               	iorwf	(___awdiv@divisor+1)^0,w,c
  2203  001870  B4D8               	btfsc	status,2,c
  2204  001872  EF3D  F00C         	goto	u581
  2205  001876  EF3F  F00C         	goto	u580
  2206  00187A                     u581:
  2207  00187A  EF67  F00C         	goto	l1838
  2208  00187E                     u580:
  2209  00187E  0E01               	movlw	1
  2210  001880  6E16               	movwf	___awdiv@counter^0,c
  2211  001882  EF47  F00C         	goto	l1824
  2212  001886                     l1822:
  2213  001886  90D8               	bcf	status,0,c
  2214  001888  3614               	rlcf	___awdiv@divisor^0,f,c
  2215  00188A  3615               	rlcf	(___awdiv@divisor+1)^0,f,c
  2216  00188C  2A16               	incf	___awdiv@counter^0,f,c
  2217  00188E                     l1824:
  2218  00188E  AE15               	btfss	(___awdiv@divisor+1)^0,7,c
  2219  001890  EF4C  F00C         	goto	u591
  2220  001894  EF4E  F00C         	goto	u590
  2221  001898                     u591:
  2222  001898  EF43  F00C         	goto	l1822
  2223  00189C                     u590:
  2224  00189C                     l1826:
  2225  00189C  90D8               	bcf	status,0,c
  2226  00189E  3618               	rlcf	___awdiv@quotient^0,f,c
  2227  0018A0  3619               	rlcf	(___awdiv@quotient+1)^0,f,c
  2228  0018A2  5014               	movf	___awdiv@divisor^0,w,c
  2229  0018A4  5C12               	subwf	___awdiv@dividend^0,w,c
  2230  0018A6  5015               	movf	(___awdiv@divisor+1)^0,w,c
  2231  0018A8  5813               	subwfb	(___awdiv@dividend+1)^0,w,c
  2232  0018AA  A0D8               	btfss	status,0,c
  2233  0018AC  EF5A  F00C         	goto	u601
  2234  0018B0  EF5C  F00C         	goto	u600
  2235  0018B4                     u601:
  2236  0018B4  EF61  F00C         	goto	l1834
  2237  0018B8                     u600:
  2238  0018B8  5014               	movf	___awdiv@divisor^0,w,c
  2239  0018BA  5E12               	subwf	___awdiv@dividend^0,f,c
  2240  0018BC  5015               	movf	(___awdiv@divisor+1)^0,w,c
  2241  0018BE  5A13               	subwfb	(___awdiv@dividend+1)^0,f,c
  2242  0018C0  8018               	bsf	___awdiv@quotient^0,0,c
  2243  0018C2                     l1834:
  2244  0018C2  90D8               	bcf	status,0,c
  2245  0018C4  3215               	rrcf	(___awdiv@divisor+1)^0,f,c
  2246  0018C6  3214               	rrcf	___awdiv@divisor^0,f,c
  2247  0018C8  2E16               	decfsz	___awdiv@counter^0,f,c
  2248  0018CA  EF4E  F00C         	goto	l1826
  2249  0018CE                     l1838:
  2250  0018CE  5017               	movf	___awdiv@sign^0,w,c
  2251  0018D0  B4D8               	btfsc	status,2,c
  2252  0018D2  EF6D  F00C         	goto	u611
  2253  0018D6  EF6F  F00C         	goto	u610
  2254  0018DA                     u611:
  2255  0018DA  EF73  F00C         	goto	l1842
  2256  0018DE                     u610:
  2257  0018DE  6C18               	negf	___awdiv@quotient^0,c
  2258  0018E0  1E19               	comf	(___awdiv@quotient+1)^0,f,c
  2259  0018E2  B0D8               	btfsc	status,0,c
  2260  0018E4  2A19               	incf	(___awdiv@quotient+1)^0,f,c
  2261  0018E6                     l1842:
  2262  0018E6  C018  F012         	movff	___awdiv@quotient,?___awdiv
  2263  0018EA  C019  F013         	movff	___awdiv@quotient+1,?___awdiv+1
  2264  0018EE  0012               	return		;funcret
  2265  0018F0                     __end_of___awdiv:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _delayWithTimer2 *****************
  2269 ;; Defined at:
  2270 ;;		line 80 in file "./timers.h"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  milliseconds    2   17[COMRAM] unsigned int 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  currentVal      2   19[COMRAM] unsigned int 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      void 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;Total ram usage:        4 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 2
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text11
  2299  001BA8                     __ptext11:
  2300                           	callstack 0
  2301  001BA8                     _delayWithTimer2:
  2302                           	callstack 28
  2303  001BA8                     
  2304                           ;./timers.h: 83:     TMR2Counter = 0;
  2305  001BA8  0E00               	movlw	0
  2306  001BAA  6E4F               	movwf	(_TMR2Counter+1)^0,c
  2307  001BAC  0E00               	movlw	0
  2308  001BAE  6E4E               	movwf	_TMR2Counter^0,c
  2309  001BB0                     
  2310                           ;./timers.h: 84:     TMR2ON = 1;
  2311  001BB0  84CA               	bsf	4042,2,c	;volatile
  2312  001BB2                     l1898:
  2313                           
  2314                           ;./timers.h: 87:         currentVal = TMR2Counter;
  2315  001BB2  C04E  F014         	movff	_TMR2Counter,delayWithTimer2@currentVal
  2316  001BB6  C04F  F015         	movff	_TMR2Counter+1,delayWithTimer2@currentVal+1
  2317  001BBA                     
  2318                           ;./timers.h: 88:     }while(currentVal < milliseconds);
  2319  001BBA  5012               	movf	delayWithTimer2@milliseconds^0,w,c
  2320  001BBC  5C14               	subwf	delayWithTimer2@currentVal^0,w,c
  2321  001BBE  5013               	movf	(delayWithTimer2@milliseconds+1)^0,w,c
  2322  001BC0  5815               	subwfb	(delayWithTimer2@currentVal+1)^0,w,c
  2323  001BC2  A0D8               	btfss	status,0,c
  2324  001BC4  EFE6  F00D         	goto	u621
  2325  001BC8  EFE8  F00D         	goto	u620
  2326  001BCC                     u621:
  2327  001BCC  EFD9  F00D         	goto	l1898
  2328  001BD0                     u620:
  2329  001BD0                     
  2330                           ;./timers.h: 89:     TMR2ON = 0;
  2331  001BD0  94CA               	bcf	4042,2,c	;volatile
  2332  001BD2  0012               	return		;funcret
  2333  001BD4                     __end_of_delayWithTimer2:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _config_ADC_Thermometer *****************
  2337 ;; Defined at:
  2338 ;;		line 39 in file "./adc.h"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 2
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text12
  2367  001CE8                     __ptext12:
  2368                           	callstack 0
  2369  001CE8                     _config_ADC_Thermometer:
  2370                           	callstack 28
  2371  001CE8                     
  2372                           ;./adc.h: 40:     TRISA &= 0xFA;
  2373  001CE8  0EFA               	movlw	250
  2374  001CEA  1692               	andwf	146,f,c	;volatile
  2375  001CEC                     
  2376                           ;./adc.h: 41:     TRISA = 0x04;
  2377  001CEC  0E04               	movlw	4
  2378  001CEE  6E92               	movwf	146,c	;volatile
  2379  001CF0                     
  2380                           ;./adc.h: 42:     ADCON0 = 0x09;
  2381  001CF0  0E09               	movlw	9
  2382  001CF2  6EC2               	movwf	194,c	;volatile
  2383  001CF4                     
  2384                           ;./adc.h: 43:     ADCON1 = 0x0A;
  2385  001CF4  0E0A               	movlw	10
  2386  001CF6  6EC1               	movwf	193,c	;volatile
  2387  001CF8  0012               	return		;funcret
  2388  001CFA                     __end_of_config_ADC_Thermometer:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _config_ADC_Potentiometer *****************
  2392 ;; Defined at:
  2393 ;;		line 31 in file "./adc.h"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;		None
  2396 ;; Auto vars:     Size  Location     Type
  2397 ;;		None
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, status,2, status,0
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;Total ram usage:        0 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 2
  2414 ;; This function calls:
  2415 ;;		Nothing
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           	psect	text13
  2422  001CFA                     __ptext13:
  2423                           	callstack 0
  2424  001CFA                     _config_ADC_Potentiometer:
  2425                           	callstack 28
  2426  001CFA                     
  2427                           ;./adc.h: 32:     TRISA &= 0xFA;
  2428  001CFA  0EFA               	movlw	250
  2429  001CFC  1692               	andwf	146,f,c	;volatile
  2430  001CFE                     
  2431                           ;./adc.h: 33:     TRISA |= 0x01;
  2432  001CFE  8092               	bsf	146,0,c	;volatile
  2433  001D00                     
  2434                           ;./adc.h: 34:     ADCON0 = 0x01;
  2435  001D00  0E01               	movlw	1
  2436  001D02  6EC2               	movwf	194,c	;volatile
  2437  001D04                     
  2438                           ;./adc.h: 35:     ADCON1 = 0x0E;
  2439  001D04  0E0E               	movlw	14
  2440  001D06  6EC1               	movwf	193,c	;volatile
  2441  001D08  0012               	return		;funcret
  2442  001D0A                     __end_of_config_ADC_Potentiometer:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _LCDStr *****************
  2446 ;; Defined at:
  2447 ;;		line 85 in file "./LCD.h"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  str             2   21[COMRAM] PTR const unsigned char 
  2450 ;;		 -> STR_11(16), STR_10(12), STR_9(13), STR_8(16), 
  2451 ;;		 -> STR_7(9), STR_6(11), STR_5(9), STR_4(16), 
  2452 ;;		 -> STR_3(9), STR_2(14), STR_1(17), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  i               1   25[COMRAM] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;Total ram usage:        5 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; Hardware stack levels required when called: 4
  2471 ;; This function calls:
  2472 ;;		_LCDDat
  2473 ;;		_LCDGoto
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text14
  2480  0019B4                     __ptext14:
  2481                           	callstack 0
  2482  0019B4                     _LCDStr:
  2483                           	callstack 26
  2484  0019B4                     
  2485                           ;./LCD.h: 86:   for (byte i = 0; str[i] != 0; i++) {
  2486  0019B4  0E00               	movlw	0
  2487  0019B6  6E1A               	movwf	LCDStr@i^0,c
  2488  0019B8  EF0A  F00D         	goto	l1986
  2489  0019BC                     l1968:
  2490                           
  2491                           ;./LCD.h: 87:     LCDDat(str[i]);
  2492  0019BC  501A               	movf	LCDStr@i^0,w,c
  2493  0019BE  2416               	addwf	LCDStr@str^0,w,c
  2494  0019C0  6E18               	movwf	??_LCDStr^0,c
  2495  0019C2  0E00               	movlw	0
  2496  0019C4  2017               	addwfc	(LCDStr@str+1)^0,w,c
  2497  0019C6  6E19               	movwf	(??_LCDStr+1)^0,c
  2498  0019C8  C018  FFF6         	movff	??_LCDStr,tblptrl
  2499  0019CC  C019  FFF7         	movff	??_LCDStr+1,tblptrh
  2500  0019D0                     	if	0	;tblptru may be non-zero
  2501  0019D0                     	endif
  2502  0019D0                     	if	0	;tblptru may be non-zero
  2503  0019D0                     	endif
  2504  0019D0  0008               	tblrd		*
  2505  0019D2  50F5               	movf	tablat,w,c
  2506  0019D4  EC31  F00E         	call	_LCDDat
  2507  0019D8                     
  2508                           ;./LCD.h: 88:     lcd_x ++;
  2509  0019D8  2A42               	incf	_lcd_x^0,f,c
  2510  0019DA                     
  2511                           ;./LCD.h: 89:     if(lcd_x == 17) {
  2512  0019DA  0E11               	movlw	17
  2513  0019DC  1842               	xorwf	_lcd_x^0,w,c
  2514  0019DE  A4D8               	btfss	status,2,c
  2515  0019E0  EFF4  F00C         	goto	u631
  2516  0019E4  EFF6  F00C         	goto	u630
  2517  0019E8                     u631:
  2518  0019E8  EF09  F00D         	goto	l1984
  2519  0019EC                     u630:
  2520  0019EC                     
  2521                           ;./LCD.h: 90:       lcd_x = 1;
  2522  0019EC  0E01               	movlw	1
  2523  0019EE  6E42               	movwf	_lcd_x^0,c
  2524  0019F0                     
  2525                           ;./LCD.h: 91:       lcd_y++;
  2526  0019F0  2A41               	incf	_lcd_y^0,f,c
  2527  0019F2                     
  2528                           ;./LCD.h: 92:       if (lcd_y == 3) {
  2529  0019F2  0E03               	movlw	3
  2530  0019F4  1841               	xorwf	_lcd_y^0,w,c
  2531  0019F6  A4D8               	btfss	status,2,c
  2532  0019F8  EF00  F00D         	goto	u641
  2533  0019FC  EF02  F00D         	goto	u640
  2534  001A00                     u641:
  2535  001A00  EF04  F00D         	goto	l1982
  2536  001A04                     u640:
  2537  001A04                     
  2538                           ;./LCD.h: 93:          lcd_y = 1;
  2539  001A04  0E01               	movlw	1
  2540  001A06  6E41               	movwf	_lcd_y^0,c
  2541  001A08                     l1982:
  2542                           
  2543                           ;./LCD.h: 95:       LCDGoto(lcd_x, lcd_y);
  2544  001A08  C041  F014         	movff	_lcd_y,LCDGoto@p_1
  2545  001A0C  5042               	movf	_lcd_x^0,w,c
  2546  001A0E  ECA1  F00D         	call	_LCDGoto
  2547  001A12                     l1984:
  2548                           
  2549                           ;./LCD.h: 97:   }
  2550  001A12  2A1A               	incf	LCDStr@i^0,f,c
  2551  001A14                     l1986:
  2552  001A14  501A               	movf	LCDStr@i^0,w,c
  2553  001A16  2416               	addwf	LCDStr@str^0,w,c
  2554  001A18  6E18               	movwf	??_LCDStr^0,c
  2555  001A1A  0E00               	movlw	0
  2556  001A1C  2017               	addwfc	(LCDStr@str+1)^0,w,c
  2557  001A1E  6E19               	movwf	(??_LCDStr+1)^0,c
  2558  001A20  C018  FFF6         	movff	??_LCDStr,tblptrl
  2559  001A24  C019  FFF7         	movff	??_LCDStr+1,tblptrh
  2560  001A28                     	if	0	;tblptru may be non-zero
  2561  001A28                     	endif
  2562  001A28                     	if	0	;tblptru may be non-zero
  2563  001A28                     	endif
  2564  001A28  0008               	tblrd		*
  2565  001A2A  50F5               	movf	tablat,w,c
  2566  001A2C  0900               	iorlw	0
  2567  001A2E  A4D8               	btfss	status,2,c
  2568  001A30  EF1C  F00D         	goto	u651
  2569  001A34  EF1E  F00D         	goto	u650
  2570  001A38                     u651:
  2571  001A38  EFDE  F00C         	goto	l1968
  2572  001A3C                     u650:
  2573  001A3C  0012               	return		;funcret
  2574  001A3E                     __end_of_LCDStr:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _LCDGoto *****************
  2578 ;; Defined at:
  2579 ;;		line 73 in file "./LCD.h"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  p_2             1    wreg     unsigned char 
  2582 ;;  p_1             1   19[COMRAM] unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  p_2             1   20[COMRAM] unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;Total ram usage:        2 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 3
  2601 ;; This function calls:
  2602 ;;		_LCDCmd
  2603 ;; This function is called by:
  2604 ;;		_LCDStr
  2605 ;;		_main
  2606 ;;		_displayNumbers
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text15
  2611  001B42                     __ptext15:
  2612                           	callstack 0
  2613  001B42                     _LCDGoto:
  2614                           	callstack 26
  2615                           
  2616                           ;incstack = 0
  2617                           ;LCDGoto@p_2 stored from wreg
  2618  001B42  6E15               	movwf	LCDGoto@p_2^0,c
  2619  001B44                     
  2620                           ;./LCD.h: 74:   if(p_1==1) {
  2621  001B44  0414               	decf	LCDGoto@p_1^0,w,c
  2622  001B46  A4D8               	btfss	status,2,c
  2623  001B48  EFA8  F00D         	goto	u551
  2624  001B4C  EFAA  F00D         	goto	u550
  2625  001B50                     u551:
  2626  001B50  EFB1  F00D         	goto	l1796
  2627  001B54                     u550:
  2628  001B54                     
  2629                           ;./LCD.h: 75:     LCDCmd(0x80 +((p_2-1)%16));
  2630  001B54  0415               	decf	LCDGoto@p_2^0,w,c
  2631  001B56  0B0F               	andlw	15
  2632  001B58  0F80               	addlw	128
  2633  001B5A  EC41  F00E         	call	_LCDCmd
  2634                           
  2635                           ;./LCD.h: 76:   } else {
  2636  001B5E  EFB6  F00D         	goto	l1798
  2637  001B62                     l1796:
  2638                           
  2639                           ;./LCD.h: 77:     LCDCmd(0xC0 +((p_2-1)%16));
  2640  001B62  0415               	decf	LCDGoto@p_2^0,w,c
  2641  001B64  0B0F               	andlw	15
  2642  001B66  0FC0               	addlw	192
  2643  001B68  EC41  F00E         	call	_LCDCmd
  2644  001B6C                     l1798:
  2645                           
  2646                           ;./LCD.h: 79:   lcd_x = p_2;
  2647  001B6C  C015  F042         	movff	LCDGoto@p_2,_lcd_x
  2648  001B70                     
  2649                           ;./LCD.h: 80:   lcd_y = p_1;
  2650  001B70  C014  F041         	movff	LCDGoto@p_1,_lcd_y
  2651  001B74  0012               	return		;funcret
  2652  001B76                     __end_of_LCDGoto:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _LCDDat *****************
  2656 ;; Defined at:
  2657 ;;		line 59 in file "./LCD.h"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  dat             1    wreg     unsigned char 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  dat             1   18[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      void 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;Total ram usage:        2 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 2
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_LCDStr
  2682 ;;		_displayNumbers
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text16
  2687  001C62                     __ptext16:
  2688                           	callstack 0
  2689  001C62                     _LCDDat:
  2690                           	callstack 27
  2691                           
  2692                           ;incstack = 0
  2693                           ;LCDDat@dat stored from wreg
  2694  001C62  6E13               	movwf	LCDDat@dat^0,c
  2695  001C64                     
  2696                           ;./LCD.h: 60:   PORTEbits.RE1 = 0;
  2697  001C64  9284               	bcf	132,1,c	;volatile
  2698                           
  2699                           ;./LCD.h: 61:   PORTEbits.RE2 = 1;
  2700  001C66  8484               	bsf	132,2,c	;volatile
  2701  001C68                     
  2702                           ;./LCD.h: 62:   PORTD = dat;
  2703  001C68  C013  FF83         	movff	LCDDat@dat,3971	;volatile
  2704  001C6C                     
  2705                           ;./LCD.h: 63:   PORTEbits.RE1 = 1;
  2706  001C6C  8284               	bsf	132,1,c	;volatile
  2707  001C6E                     
  2708                           ;./LCD.h: 64:   _delay((unsigned long)((2000)*(4000000L/4000000.0)));
  2709  001C6E  0E03               	movlw	3
  2710  001C70  6E12               	movwf	??_LCDDat^0,c
  2711  001C72  0E98               	movlw	152
  2712  001C74                     u1137:
  2713  001C74  2EE8               	decfsz	wreg,f,c
  2714  001C76  D7FE               	bra	u1137
  2715  001C78  2E12               	decfsz	??_LCDDat^0,f,c
  2716  001C7A  D7FC               	bra	u1137
  2717  001C7C                     
  2718                           ;./LCD.h: 65:   PORTEbits.RE1 = 0;
  2719  001C7C  9284               	bcf	132,1,c	;volatile
  2720  001C7E                     
  2721                           ;./LCD.h: 67:   PORTEbits.RE2 = 0;
  2722  001C7E  9484               	bcf	132,2,c	;volatile
  2723  001C80  0012               	return		;funcret
  2724  001C82                     __end_of_LCDDat:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _InitLCD *****************
  2728 ;; Defined at:
  2729 ;;		line 102 in file "./LCD.h"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 3
  2750 ;; This function calls:
  2751 ;;		_LCDCmd
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text17
  2758  001B76                     __ptext17:
  2759                           	callstack 0
  2760  001B76                     _InitLCD:
  2761                           	callstack 27
  2762  001B76                     
  2763                           ;./LCD.h: 103:   TRISEbits.RE1 = 0;
  2764  001B76  9296               	bcf	150,1,c	;volatile
  2765                           
  2766                           ;./LCD.h: 104:   TRISEbits.RE2 = 0;
  2767  001B78  9496               	bcf	150,2,c	;volatile
  2768  001B7A                     
  2769                           ;./LCD.h: 105:   TRISD = 0;
  2770  001B7A  0E00               	movlw	0
  2771  001B7C  6E95               	movwf	149,c	;volatile
  2772  001B7E                     
  2773                           ;./LCD.h: 107:   PORTEbits.RE1 = 0;
  2774  001B7E  9284               	bcf	132,1,c	;volatile
  2775  001B80                     
  2776                           ;./LCD.h: 108:   PORTEbits.RE2 = 0;
  2777  001B80  9484               	bcf	132,2,c	;volatile
  2778  001B82                     
  2779                           ;./LCD.h: 109:   LCDCmd(0x38);
  2780  001B82  0E38               	movlw	56
  2781  001B84  EC41  F00E         	call	_LCDCmd
  2782  001B88                     
  2783                           ;./LCD.h: 110:   LCDCmd(0x08);
  2784  001B88  0E08               	movlw	8
  2785  001B8A  EC41  F00E         	call	_LCDCmd
  2786  001B8E                     
  2787                           ;./LCD.h: 111:   LCDCmd(0x0C);
  2788  001B8E  0E0C               	movlw	12
  2789  001B90  EC41  F00E         	call	_LCDCmd
  2790  001B94                     
  2791                           ;./LCD.h: 112:   LCDCmd(0x06);
  2792  001B94  0E06               	movlw	6
  2793  001B96  EC41  F00E         	call	_LCDCmd
  2794  001B9A                     
  2795                           ;./LCD.h: 113:   LCDCmd(0x01);
  2796  001B9A  0E01               	movlw	1
  2797  001B9C  EC41  F00E         	call	_LCDCmd
  2798  001BA0                     
  2799                           ;./LCD.h: 114:   LCDCmd(0x80);
  2800  001BA0  0E80               	movlw	128
  2801  001BA2  EC41  F00E         	call	_LCDCmd
  2802  001BA6  0012               	return		;funcret
  2803  001BA8                     __end_of_InitLCD:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _LCDCmd *****************
  2807 ;; Defined at:
  2808 ;;		line 49 in file "./LCD.h"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  cmd             1    wreg     unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  cmd             1   18[COMRAM] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;Total ram usage:        2 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; Hardware stack levels required when called: 2
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_LCDGoto
  2833 ;;		_InitLCD
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text18
  2839  001C82                     __ptext18:
  2840                           	callstack 0
  2841  001C82                     _LCDCmd:
  2842                           	callstack 26
  2843                           
  2844                           ;incstack = 0
  2845                           ;LCDCmd@cmd stored from wreg
  2846  001C82  6E13               	movwf	LCDCmd@cmd^0,c
  2847  001C84                     
  2848                           ;./LCD.h: 50:   PORTEbits.RE1 = 0;
  2849  001C84  9284               	bcf	132,1,c	;volatile
  2850                           
  2851                           ;./LCD.h: 51:   PORTEbits.RE2 = 0;
  2852  001C86  9484               	bcf	132,2,c	;volatile
  2853  001C88                     
  2854                           ;./LCD.h: 52:   PORTD = cmd;
  2855  001C88  C013  FF83         	movff	LCDCmd@cmd,3971	;volatile
  2856  001C8C                     
  2857                           ;./LCD.h: 53:   PORTEbits.RE1 = 1;
  2858  001C8C  8284               	bsf	132,1,c	;volatile
  2859  001C8E                     
  2860                           ;./LCD.h: 54:   _delay((unsigned long)((2000)*(4000000L/4000000.0)));
  2861  001C8E  0E03               	movlw	3
  2862  001C90  6E12               	movwf	??_LCDCmd^0,c
  2863  001C92  0E98               	movlw	152
  2864  001C94                     u1147:
  2865  001C94  2EE8               	decfsz	wreg,f,c
  2866  001C96  D7FE               	bra	u1147
  2867  001C98  2E12               	decfsz	??_LCDCmd^0,f,c
  2868  001C9A  D7FC               	bra	u1147
  2869  001C9C                     
  2870                           ;./LCD.h: 55:   PORTEbits.RE1 = 0;
  2871  001C9C  9284               	bcf	132,1,c	;volatile
  2872  001C9E  0012               	return		;funcret
  2873  001CA0                     __end_of_LCDCmd:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _my_ISR *****************
  2877 ;; Defined at:
  2878 ;;		line 33 in file "./ISR.h"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  temperatureC    4    0        float 
  2883 ;;  read_ADC_Raw    2   15[COMRAM] unsigned short 
  2884 ;;  before          1   14[COMRAM] unsigned char 
  2885 ;;  portData        1    0        unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;Total ram usage:        9 bytes
  2900 ;; Hardware stack levels used: 1
  2901 ;; Hardware stack levels required when called: 1
  2902 ;; This function calls:
  2903 ;;		___lwdiv
  2904 ;;		i2___awdiv
  2905 ;; This function is called by:
  2906 ;;		Interrupt level 2
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	intcode
  2911  000008                     __pintcode:
  2912                           	callstack 0
  2913  000008                     _my_ISR:
  2914                           	callstack 26
  2915                           
  2916                           ;incstack = 0
  2917  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2918  00000A  ED25  F00A         	call	int_func,f	;refresh shadow registers
  2919                           
  2920                           	psect	intcode_body
  2921  00144A                     __pintcode_body:
  2922                           	callstack 26
  2923  00144A                     int_func:
  2924                           	callstack 26
  2925  00144A  0006               	pop		; remove dummy address from shadow register refresh
  2926  00144C  CFD9 F00B          	movff	fsr2l,??_my_ISR+2
  2927  001450  CFDA F00C          	movff	fsr2h,??_my_ISR+3
  2928  001454  CFF3 F00D          	movff	prodl,??_my_ISR+4
  2929  001458  CFF4 F00E          	movff	prodh,??_my_ISR+5
  2930  00145C                     
  2931                           ;./ISR.h: 34:     float temperatureCelcius;;./ISR.h: 35:     byte portData;;./ISR.h: 36:
      +                               static byte halfSec = 0;;./ISR.h: 37:     unsigned short read_ADC_Raw;;./ISR.h: 38:
      +                               byte before;;./ISR.h: 39:     static byte flip = 0;;./ISR.h: 95:     if ( ADIF == 1
      +                          ){
  2932  00145C  AC9E               	btfss	3998,6,c	;volatile
  2933  00145E  EF33  F00A         	goto	i2u78_41
  2934  001462  EF35  F00A         	goto	i2u78_40
  2935  001466                     i2u78_41:
  2936  001466  EF90  F00A         	goto	i2l2168
  2937  00146A                     i2u78_40:
  2938  00146A                     
  2939                           ;./ISR.h: 99:         read_ADC_Raw = ADRESH;
  2940  00146A  CFC4 F010          	movff	4036,my_ISR@read_ADC_Raw	;volatile
  2941  00146E  6A11               	clrf	(my_ISR@read_ADC_Raw+1)^0,c
  2942                           
  2943                           ;./ISR.h: 100:         read_ADC_Raw = read_ADC_Raw << 8;
  2944  001470  5010               	movf	my_ISR@read_ADC_Raw^0,w,c
  2945  001472  6E11               	movwf	(my_ISR@read_ADC_Raw+1)^0,c
  2946  001474  6A10               	clrf	my_ISR@read_ADC_Raw^0,c
  2947  001476                     
  2948                           ;./ISR.h: 101:         read_ADC_Raw += ADRESL;
  2949  001476  50C3               	movf	195,w,c	;volatile
  2950  001478  2610               	addwf	my_ISR@read_ADC_Raw^0,f,c
  2951  00147A  0E00               	movlw	0
  2952  00147C  2211               	addwfc	(my_ISR@read_ADC_Raw+1)^0,f,c
  2953  00147E                     
  2954                           ;./ISR.h: 102:         read_ADC_Raw &= 0x03FF;
  2955  00147E  0EFF               	movlw	255
  2956  001480  1610               	andwf	my_ISR@read_ADC_Raw^0,f,c
  2957  001482  0E03               	movlw	3
  2958  001484  1611               	andwf	(my_ISR@read_ADC_Raw+1)^0,f,c
  2959  001486                     
  2960                           ;./ISR.h: 104:         if (digitEntryCount == 2){
  2961  001486  0E02               	movlw	2
  2962  001488  1858               	xorwf	_digitEntryCount^0,w,c
  2963  00148A  A4D8               	btfss	status,2,c
  2964  00148C  EF4A  F00A         	goto	i2u79_41
  2965  001490  EF4C  F00A         	goto	i2u79_40
  2966  001494                     i2u79_41:
  2967  001494  EF54  F00A         	goto	i2l252
  2968  001498                     i2u79_40:
  2969  001498                     
  2970                           ;./ISR.h: 106:              read_ADC_Raw = (1024 - read_ADC_Raw);
  2971  001498  5010               	movf	my_ISR@read_ADC_Raw^0,w,c
  2972  00149A  0800               	sublw	0
  2973  00149C  6E10               	movwf	my_ISR@read_ADC_Raw^0,c
  2974  00149E  5011               	movf	(my_ISR@read_ADC_Raw+1)^0,w,c
  2975  0014A0  A0D8               	btfss	status,0,c
  2976  0014A2  2AE8               	incf	wreg,f,c
  2977  0014A4  0804               	sublw	4
  2978  0014A6  6E11               	movwf	(my_ISR@read_ADC_Raw+1)^0,c
  2979  0014A8                     i2l252:
  2980                           
  2981                           ;./ISR.h: 110:         if (read_ADC_Raw < 1000){
  2982  0014A8  0EE8               	movlw	232
  2983  0014AA  5C10               	subwf	my_ISR@read_ADC_Raw^0,w,c
  2984  0014AC  0E03               	movlw	3
  2985  0014AE  5811               	subwfb	(my_ISR@read_ADC_Raw+1)^0,w,c
  2986  0014B0  B0D8               	btfsc	status,0,c
  2987  0014B2  EF5D  F00A         	goto	i2u80_41
  2988  0014B6  EF5F  F00A         	goto	i2u80_40
  2989  0014BA                     i2u80_41:
  2990  0014BA  EF6D  F00A         	goto	i2l2154
  2991  0014BE                     i2u80_40:
  2992  0014BE                     
  2993                           ;./ISR.h: 111:             result_ADC = (char)(read_ADC_Raw / 10);
  2994  0014BE  C010  F001         	movff	my_ISR@read_ADC_Raw,___lwdiv@dividend
  2995  0014C2  C011  F002         	movff	my_ISR@read_ADC_Raw+1,___lwdiv@dividend+1
  2996  0014C6  0E00               	movlw	0
  2997  0014C8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2998  0014CA  0E0A               	movlw	10
  2999  0014CC  6E03               	movwf	___lwdiv@divisor^0,c
  3000  0014CE  EC1F  F00D         	call	___lwdiv	;wreg free
  3001  0014D2  5001               	movf	?___lwdiv^0,w,c
  3002  0014D4  6E57               	movwf	_result_ADC^0,c
  3003                           
  3004                           ;./ISR.h: 112:         }
  3005  0014D6  EF6F  F00A         	goto	i2l254
  3006  0014DA                     i2l2154:
  3007                           
  3008                           ;./ISR.h: 114:             result_ADC = 100;
  3009  0014DA  0E64               	movlw	100
  3010  0014DC  6E57               	movwf	_result_ADC^0,c
  3011  0014DE                     i2l254:
  3012                           
  3013                           ;./ISR.h: 118:         if ((firstTime == 0) && (safeState == 3)){
  3014  0014DE  5056               	movf	_firstTime^0,w,c
  3015  0014E0  A4D8               	btfss	status,2,c
  3016  0014E2  EF75  F00A         	goto	i2u81_41
  3017  0014E6  EF77  F00A         	goto	i2u81_40
  3018  0014EA                     i2u81_41:
  3019  0014EA  EF84  F00A         	goto	i2l2162
  3020  0014EE                     i2u81_40:
  3021  0014EE  0E03               	movlw	3
  3022  0014F0  1855               	xorwf	_safeState^0,w,c
  3023  0014F2  A4D8               	btfss	status,2,c
  3024  0014F4  EF7E  F00A         	goto	i2u82_41
  3025  0014F8  EF80  F00A         	goto	i2u82_40
  3026  0014FC                     i2u82_41:
  3027  0014FC  EF84  F00A         	goto	i2l2162
  3028  001500                     i2u82_40:
  3029  001500                     
  3030                           ;./ISR.h: 119:              firstTime = 1;
  3031  001500  0E01               	movlw	1
  3032  001502  6E56               	movwf	_firstTime^0,c
  3033  001504                     
  3034                           ;./ISR.h: 122:         }
  3035  001504  EF8F  F00A         	goto	i2l2166
  3036  001508                     i2l2162:
  3037  001508  5057               	movf	_result_ADC^0,w,c
  3038  00150A  180F               	xorwf	my_ISR@before^0,w,c
  3039  00150C  B4D8               	btfsc	status,2,c
  3040  00150E  EF8B  F00A         	goto	i2u83_41
  3041  001512  EF8D  F00A         	goto	i2u83_40
  3042  001516                     i2u83_41:
  3043  001516  EF8F  F00A         	goto	i2l2166
  3044  00151A                     i2u83_40:
  3045  00151A                     
  3046                           ;./ISR.h: 124:             start3 = 1;
  3047  00151A  0E01               	movlw	1
  3048  00151C  6E54               	movwf	_start3^0,c
  3049  00151E                     i2l2166:
  3050                           
  3051                           ;./ISR.h: 127:         ADIF = 0;
  3052  00151E  9C9E               	bcf	3998,6,c	;volatile
  3053  001520                     i2l2168:
  3054                           
  3055                           ;./ISR.h: 131:    if (INT0IF == 1){
  3056  001520  A2F2               	btfss	4082,1,c	;volatile
  3057  001522  EF95  F00A         	goto	i2u84_41
  3058  001526  EF97  F00A         	goto	i2u84_40
  3059  00152A                     i2u84_41:
  3060  00152A  EFDE  F00A         	goto	i2l258
  3061  00152E                     i2u84_40:
  3062  00152E  EFC2  F00A         	goto	i2l2190
  3063  001532                     i2l2172:
  3064                           
  3065                           ;./ISR.h: 138:         if(result_ADC < 100){
  3066  001532  0E64               	movlw	100
  3067  001534  6057               	cpfslt	_result_ADC^0,c
  3068  001536  EF9F  F00A         	goto	i2u85_41
  3069  00153A  EFA1  F00A         	goto	i2u85_40
  3070  00153E                     i2u85_41:
  3071  00153E  EFDB  F00A         	goto	i2l261
  3072  001542                     i2u85_40:
  3073  001542                     i2l2174:
  3074                           
  3075                           ;./ISR.h: 140:             passwordsAttempt[digitEntryCount-1] = result_ADC;
  3076  001542  0E4A               	movlw	low (_passwordsAttempt+65535)
  3077  001544  2458               	addwf	_digitEntryCount^0,w,c
  3078  001546  6ED9               	movwf	fsr2l,c
  3079  001548  6ADA               	clrf	fsr2h,c
  3080  00154A  0E00               	movlw	high (_passwordsAttempt+65535)
  3081  00154C  22DA               	addwfc	fsr2h,f,c
  3082  00154E  C057  FFDF         	movff	_result_ADC,indf2
  3083  001552                     
  3084                           ;./ISR.h: 141:             digitEntryCount++;
  3085  001552  2A58               	incf	_digitEntryCount^0,f,c
  3086  001554  EFDB  F00A         	goto	i2l261
  3087  001558                     i2l2178:
  3088                           
  3089                           ;./ISR.h: 146:         if (digitEntryCount == 0){
  3090  001558  5058               	movf	_digitEntryCount^0,w,c
  3091  00155A  A4D8               	btfss	status,2,c
  3092  00155C  EFB2  F00A         	goto	i2u86_41
  3093  001560  EFB4  F00A         	goto	i2u86_40
  3094  001564                     i2u86_41:
  3095  001564  EFB8  F00A         	goto	i2l2182
  3096  001568                     i2u86_40:
  3097  001568                     
  3098                           ;./ISR.h: 147:             start3 = 1;
  3099  001568  0E01               	movlw	1
  3100  00156A  6E54               	movwf	_start3^0,c
  3101                           
  3102                           ;./ISR.h: 148:             digitEntryCount = 1;
  3103  00156C  0E01               	movlw	1
  3104  00156E  6E58               	movwf	_digitEntryCount^0,c
  3105  001570                     i2l2182:
  3106                           
  3107                           ;./ISR.h: 150:         if(result_ADC < 100){
  3108  001570  0E64               	movlw	100
  3109  001572  6057               	cpfslt	_result_ADC^0,c
  3110  001574  EFBE  F00A         	goto	i2u87_41
  3111  001578  EFC0  F00A         	goto	i2u87_40
  3112  00157C                     i2u87_41:
  3113  00157C  EFDB  F00A         	goto	i2l261
  3114  001580                     i2u87_40:
  3115  001580  EFA1  F00A         	goto	i2l2174
  3116  001584                     i2l2190:
  3117  001584  5055               	movf	_safeState^0,w,c
  3118  001586  6E09               	movwf	??_my_ISR^0,c
  3119  001588  6A0A               	clrf	(??_my_ISR+1)^0,c
  3120                           
  3121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3122                           ; Switch size 1, requested type "simple"
  3123                           ; Number of cases is 1, Range of values is 0 to 0
  3124                           ; switch strategies available:
  3125                           ; Name         Instructions Cycles
  3126                           ; simple_byte            4     3 (average)
  3127                           ;	Chosen strategy is simple_byte
  3128  00158A  500A               	movf	(??_my_ISR+1)^0,w,c
  3129  00158C  0A00               	xorlw	0	; case 0
  3130  00158E  B4D8               	btfsc	status,2,c
  3131  001590  EFCC  F00A         	goto	i2l2516
  3132  001594  EFDB  F00A         	goto	i2l261
  3133  001598                     i2l2516:
  3134                           
  3135                           ; Switch size 1, requested type "simple"
  3136                           ; Number of cases is 3, Range of values is 1 to 3
  3137                           ; switch strategies available:
  3138                           ; Name         Instructions Cycles
  3139                           ; simple_byte           10     6 (average)
  3140                           ;	Chosen strategy is simple_byte
  3141  001598  5009               	movf	??_my_ISR^0,w,c
  3142  00159A  0A01               	xorlw	1	; case 1
  3143  00159C  B4D8               	btfsc	status,2,c
  3144  00159E  EFDB  F00A         	goto	i2l261
  3145  0015A2  0A03               	xorlw	3	; case 2
  3146  0015A4  B4D8               	btfsc	status,2,c
  3147  0015A6  EF99  F00A         	goto	i2l2172
  3148  0015AA  0A01               	xorlw	1	; case 3
  3149  0015AC  B4D8               	btfsc	status,2,c
  3150  0015AE  EFAC  F00A         	goto	i2l2178
  3151  0015B2  EFDB  F00A         	goto	i2l261
  3152  0015B6                     i2l261:
  3153                           
  3154                           ;./ISR.h: 161:         INT0IF = 0;
  3155  0015B6  92F2               	bcf	4082,1,c	;volatile
  3156                           
  3157                           ;./ISR.h: 162:         return;
  3158  0015B8  EFA2  F00B         	goto	i2l268
  3159  0015BC                     i2l258:
  3160                           
  3161                           ;./ISR.h: 202:     if (INT1IF == 1){
  3162  0015BC  A0F0               	btfss	4080,0,c	;volatile
  3163  0015BE  EFE3  F00A         	goto	i2u88_41
  3164  0015C2  EFE5  F00A         	goto	i2u88_40
  3165  0015C6                     i2u88_41:
  3166  0015C6  EFE8  F00A         	goto	i2l2196
  3167  0015CA                     i2u88_40:
  3168  0015CA                     
  3169                           ;./ISR.h: 203:         lockAgain = 1;
  3170  0015CA  0E01               	movlw	1
  3171  0015CC  6E53               	movwf	_lockAgain^0,c
  3172  0015CE                     
  3173                           ;./ISR.h: 204:         INT1IF = 0;
  3174  0015CE  90F0               	bcf	4080,0,c	;volatile
  3175  0015D0                     i2l2196:
  3176                           
  3177                           ;./ISR.h: 209:     if (INT2IF == 1){
  3178  0015D0  A2F0               	btfss	4080,1,c	;volatile
  3179  0015D2  EFED  F00A         	goto	i2u89_41
  3180  0015D6  EFEF  F00A         	goto	i2u89_40
  3181  0015DA                     i2u89_41:
  3182  0015DA  EFF2  F00A         	goto	i2l2202
  3183  0015DE                     i2u89_40:
  3184  0015DE                     
  3185                           ;./ISR.h: 210:         lockAgain = 1;
  3186  0015DE  0E01               	movlw	1
  3187  0015E0  6E53               	movwf	_lockAgain^0,c
  3188  0015E2                     
  3189                           ;./ISR.h: 211:         INT2IF = 0;
  3190  0015E2  92F0               	bcf	4080,1,c	;volatile
  3191  0015E4                     i2l2202:
  3192                           
  3193                           ;./ISR.h: 216:     if (RBIF == 1){
  3194  0015E4  A0F2               	btfss	4082,0,c	;volatile
  3195  0015E6  EFF7  F00A         	goto	i2u90_41
  3196  0015EA  EFF9  F00A         	goto	i2u90_40
  3197  0015EE                     i2u90_41:
  3198  0015EE  EFFC  F00A         	goto	i2l2208
  3199  0015F2                     i2u90_40:
  3200  0015F2                     
  3201                           ;./ISR.h: 217:         lockAgain = 1;
  3202  0015F2  0E01               	movlw	1
  3203  0015F4  6E53               	movwf	_lockAgain^0,c
  3204  0015F6                     
  3205                           ;./ISR.h: 218:         RBIF = 0;
  3206  0015F6  90F2               	bcf	4082,0,c	;volatile
  3207  0015F8                     i2l2208:
  3208                           
  3209                           ;./ISR.h: 223:     if(TMR0IF == 1){
  3210  0015F8  A4F2               	btfss	4082,2,c	;volatile
  3211  0015FA  EF01  F00B         	goto	i2u91_41
  3212  0015FE  EF03  F00B         	goto	i2u91_40
  3213  001602                     i2u91_41:
  3214  001602  EF44  F00B         	goto	i2l2240
  3215  001606                     i2u91_40:
  3216  001606                     
  3217                           ;./ISR.h: 225:         displayData[2] = downCounter90s / 10;
  3218  001606  C043  F001         	movff	_downCounter90s,i2___awdiv@dividend
  3219  00160A  6A02               	clrf	(i2___awdiv@dividend+1)^0,c
  3220  00160C  0E00               	movlw	0
  3221  00160E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  3222  001610  0E0A               	movlw	10
  3223  001612  6E03               	movwf	i2___awdiv@divisor^0,c
  3224  001614  EC78  F00C         	call	i2___awdiv	;wreg free
  3225  001618  5001               	movf	?i2___awdiv^0,w,c
  3226  00161A  6E46               	movwf	(_displayData+2)^0,c
  3227  00161C                     
  3228                           ;./ISR.h: 226:         displayData[3] = downCounter90s - (displayData[2] * 10);
  3229  00161C  5046               	movf	(_displayData+2)^0,w,c
  3230  00161E  0DF6               	mullw	246
  3231  001620  50F3               	movf	243,w,c
  3232  001622  2443               	addwf	_downCounter90s^0,w,c
  3233  001624  6E47               	movwf	(_displayData+3)^0,c
  3234  001626                     
  3235                           ;./ISR.h: 228:         halfSec= ~(halfSec);
  3236  001626  1E51               	comf	my_ISR@halfSec^0,f,c
  3237  001628                     
  3238                           ;./ISR.h: 229:         if (halfSec){
  3239  001628  5051               	movf	my_ISR@halfSec^0,w,c
  3240  00162A  B4D8               	btfsc	status,2,c
  3241  00162C  EF1A  F00B         	goto	i2u92_41
  3242  001630  EF1C  F00B         	goto	i2u92_40
  3243  001634                     i2u92_41:
  3244  001634  EF25  F00B         	goto	i2l2222
  3245  001638                     i2u92_40:
  3246  001638                     
  3247                           ;./ISR.h: 231:             if (downCounter90s != 0) {
  3248  001638  5043               	movf	_downCounter90s^0,w,c
  3249  00163A  B4D8               	btfsc	status,2,c
  3250  00163C  EF22  F00B         	goto	i2u93_41
  3251  001640  EF24  F00B         	goto	i2u93_40
  3252  001644                     i2u93_41:
  3253  001644  EF25  F00B         	goto	i2l2222
  3254  001648                     i2u93_40:
  3255  001648                     
  3256                           ;./ISR.h: 232:             downCounter90s--;
  3257  001648  0643               	decf	_downCounter90s^0,f,c
  3258  00164A                     i2l2222:
  3259                           
  3260                           ;./ISR.h: 236:         if (blinkEnable){
  3261  00164A  5052               	movf	_blinkEnable^0,w,c
  3262  00164C  B4D8               	btfsc	status,2,c
  3263  00164E  EF2B  F00B         	goto	i2u94_41
  3264  001652  EF2D  F00B         	goto	i2u94_40
  3265  001656                     i2u94_41:
  3266  001656  EF3F  F00B         	goto	i2l2234
  3267  00165A                     i2u94_40:
  3268  00165A                     
  3269                           ;./ISR.h: 237:             INT0IE = 0;
  3270  00165A  98F2               	bcf	4082,4,c	;volatile
  3271  00165C                     
  3272                           ;./ISR.h: 238:             if (halfSec){
  3273  00165C  5051               	movf	my_ISR@halfSec^0,w,c
  3274  00165E  B4D8               	btfsc	status,2,c
  3275  001660  EF34  F00B         	goto	i2u95_41
  3276  001664  EF36  F00B         	goto	i2u95_40
  3277  001668                     i2u95_41:
  3278  001668  EF3A  F00B         	goto	i2l2230
  3279  00166C                     i2u95_40:
  3280  00166C                     
  3281                           ;./ISR.h: 239:                 TRISB = 0xFF;
  3282  00166C  6893               	setf	147,c	;volatile
  3283                           
  3284                           ;./ISR.h: 240:                 PORTB = 0xFF;
  3285  00166E  6881               	setf	129,c	;volatile
  3286                           
  3287                           ;./ISR.h: 241:             }
  3288  001670  EF3E  F00B         	goto	i2l2232
  3289  001674                     i2l2230:
  3290                           
  3291                           ;./ISR.h: 243:                 PORTB &= 0x00;
  3292  001674  0E00               	movlw	0
  3293  001676  6E81               	movwf	129,c	;volatile
  3294                           
  3295                           ;./ISR.h: 244:                 TRISB = 0x11;
  3296  001678  0E11               	movlw	17
  3297  00167A  6E93               	movwf	147,c	;volatile
  3298  00167C                     i2l2232:
  3299                           
  3300                           ;./ISR.h: 248:             INT0IE = 1;
  3301  00167C  88F2               	bsf	4082,4,c	;volatile
  3302  00167E                     i2l2234:
  3303                           
  3304                           ;./ISR.h: 252:         TMR0H = (char)(TIM0LOAD >> 8);
  3305  00167E  C03E  FFD7         	movff	_TIM0LOAD+1,4055	;volatile
  3306  001682                     
  3307                           ;./ISR.h: 253:         TMR0L = (char)(TIM0LOAD - (TMR0H << 8));
  3308  001682  C03D  FFD6         	movff	_TIM0LOAD,4054	;volatile
  3309  001686                     
  3310                           ;./ISR.h: 255:         TMR0IF = 0;
  3311  001686  94F2               	bcf	4082,2,c	;volatile
  3312  001688                     i2l2240:
  3313                           
  3314                           ;./ISR.h: 262:     if (TMR1IF == 1) {
  3315  001688  A09E               	btfss	3998,0,c	;volatile
  3316  00168A  EF49  F00B         	goto	i2u96_41
  3317  00168E  EF4B  F00B         	goto	i2u96_40
  3318  001692                     i2u96_41:
  3319  001692  EF98  F00B         	goto	i2l2278
  3320  001696                     i2u96_40:
  3321  001696                     
  3322                           ;./ISR.h: 265:         TRISD = 0x00;
  3323  001696  0E00               	movlw	0
  3324  001698  6E95               	movwf	149,c	;volatile
  3325                           
  3326                           ;./ISR.h: 266:         TRISA = 0xC3;
  3327  00169A  0EC3               	movlw	195
  3328  00169C  6E92               	movwf	146,c	;volatile
  3329                           
  3330                           ;./ISR.h: 267:         PORTA &= 0;
  3331  00169E  0E00               	movlw	0
  3332  0016A0  6E80               	movwf	128,c	;volatile
  3333  0016A2                     
  3334                           ;./ISR.h: 272:         PORTE &= ~(1UL << 1);
  3335  0016A2  9284               	bcf	132,1,c	;volatile
  3336  0016A4                     
  3337                           ;./ISR.h: 274:         PORTD = segmentData[displayData[0]];
  3338  0016A4  0E29               	movlw	low _segmentData
  3339  0016A6  2444               	addwf	_displayData^0,w,c
  3340  0016A8  6ED9               	movwf	fsr2l,c
  3341  0016AA  6ADA               	clrf	fsr2h,c
  3342  0016AC  0E00               	movlw	high _segmentData
  3343  0016AE  22DA               	addwfc	fsr2h,f,c
  3344  0016B0  50DF               	movf	indf2,w,c
  3345  0016B2  6E83               	movwf	131,c	;volatile
  3346  0016B4                     
  3347                           ;./ISR.h: 275:         PORTA |= 0x04;
  3348  0016B4  8480               	bsf	128,2,c	;volatile
  3349  0016B6                     
  3350                           ;./ISR.h: 278:         PORTA &= 0;
  3351  0016B6  0E00               	movlw	0
  3352  0016B8  6E80               	movwf	128,c	;volatile
  3353                           
  3354                           ;./ISR.h: 280:         PORTD = segmentData[displayData[1]];
  3355  0016BA  0E29               	movlw	low _segmentData
  3356  0016BC  2445               	addwf	(_displayData+1)^0,w,c
  3357  0016BE  6ED9               	movwf	fsr2l,c
  3358  0016C0  6ADA               	clrf	fsr2h,c
  3359  0016C2  0E00               	movlw	high _segmentData
  3360  0016C4  22DA               	addwfc	fsr2h,f,c
  3361  0016C6  50DF               	movf	indf2,w,c
  3362  0016C8  6E83               	movwf	131,c	;volatile
  3363  0016CA                     
  3364                           ;./ISR.h: 281:         PORTA |= 0x08;
  3365  0016CA  8680               	bsf	128,3,c	;volatile
  3366  0016CC                     
  3367                           ;./ISR.h: 282:         _delay((unsigned long)((10)*(4000000L/4000.0)));
  3368  0016CC  0E0D               	movlw	13
  3369  0016CE  6E09               	movwf	??_my_ISR^0,c
  3370  0016D0  0EFC               	movlw	252
  3371  0016D2                     i2u115_47:
  3372  0016D2  2EE8               	decfsz	wreg,f,c
  3373  0016D4  D7FE               	bra	i2u115_47
  3374  0016D6  2E09               	decfsz	??_my_ISR^0,f,c
  3375  0016D8  D7FC               	bra	i2u115_47
  3376  0016DA                     
  3377                           ;./ISR.h: 284:         PORTA &= 0;
  3378  0016DA  0E00               	movlw	0
  3379  0016DC  6E80               	movwf	128,c	;volatile
  3380  0016DE                     
  3381                           ;./ISR.h: 286:         PORTD = segmentData[displayData[2]];
  3382  0016DE  0E29               	movlw	low _segmentData
  3383  0016E0  2446               	addwf	(_displayData+2)^0,w,c
  3384  0016E2  6ED9               	movwf	fsr2l,c
  3385  0016E4  6ADA               	clrf	fsr2h,c
  3386  0016E6  0E00               	movlw	high _segmentData
  3387  0016E8  22DA               	addwfc	fsr2h,f,c
  3388  0016EA  50DF               	movf	indf2,w,c
  3389  0016EC  6E83               	movwf	131,c	;volatile
  3390  0016EE                     
  3391                           ;./ISR.h: 287:         PORTA |= 0x10;
  3392  0016EE  8880               	bsf	128,4,c	;volatile
  3393  0016F0                     
  3394                           ;./ISR.h: 288:         _delay((unsigned long)((10)*(4000000L/4000.0)));
  3395  0016F0  0E0D               	movlw	13
  3396  0016F2  6E09               	movwf	??_my_ISR^0,c
  3397  0016F4  0EFC               	movlw	252
  3398  0016F6                     i2u116_47:
  3399  0016F6  2EE8               	decfsz	wreg,f,c
  3400  0016F8  D7FE               	bra	i2u116_47
  3401  0016FA  2E09               	decfsz	??_my_ISR^0,f,c
  3402  0016FC  D7FC               	bra	i2u116_47
  3403                           
  3404                           ;./ISR.h: 290:         PORTA &= 0;
  3405  0016FE  0E00               	movlw	0
  3406  001700  6E80               	movwf	128,c	;volatile
  3407  001702                     
  3408                           ;./ISR.h: 292:         PORTD = segmentData[displayData[3]];
  3409  001702  0E29               	movlw	low _segmentData
  3410  001704  2447               	addwf	(_displayData+3)^0,w,c
  3411  001706  6ED9               	movwf	fsr2l,c
  3412  001708  6ADA               	clrf	fsr2h,c
  3413  00170A  0E00               	movlw	high _segmentData
  3414  00170C  22DA               	addwfc	fsr2h,f,c
  3415  00170E  50DF               	movf	indf2,w,c
  3416  001710  6E83               	movwf	131,c	;volatile
  3417  001712                     
  3418                           ;./ISR.h: 293:         PORTA |= 0x20;
  3419  001712  8A80               	bsf	128,5,c	;volatile
  3420  001714                     
  3421                           ;./ISR.h: 294:         _delay((unsigned long)((10)*(4000000L/4000.0)));
  3422  001714  0E0D               	movlw	13
  3423  001716  6E09               	movwf	??_my_ISR^0,c
  3424  001718  0EFC               	movlw	252
  3425  00171A                     i2u117_47:
  3426  00171A  2EE8               	decfsz	wreg,f,c
  3427  00171C  D7FE               	bra	i2u117_47
  3428  00171E  2E09               	decfsz	??_my_ISR^0,f,c
  3429  001720  D7FC               	bra	i2u117_47
  3430  001722                     
  3431                           ;./ISR.h: 296:         PORTA &= 0;
  3432  001722  0E00               	movlw	0
  3433  001724  6E80               	movwf	128,c	;volatile
  3434  001726                     
  3435                           ;./ISR.h: 298:         TMR1H = (char)(TIM1LOAD >> 8);
  3436  001726  C03A  FFCF         	movff	_TIM1LOAD+1,4047	;volatile
  3437  00172A                     
  3438                           ;./ISR.h: 299:         TMR1L = (char)(TIM1LOAD - (TMR1H << 8));
  3439  00172A  C039  FFCE         	movff	_TIM1LOAD,4046	;volatile
  3440  00172E                     
  3441                           ;./ISR.h: 302:         TMR1IF = 0;
  3442  00172E  909E               	bcf	3998,0,c	;volatile
  3443  001730                     i2l2278:
  3444                           
  3445                           ;./ISR.h: 306:     if(TMR2IF == 1){
  3446  001730  A29E               	btfss	3998,1,c	;volatile
  3447  001732  EF9D  F00B         	goto	i2u97_41
  3448  001736  EF9F  F00B         	goto	i2u97_40
  3449  00173A                     i2u97_41:
  3450  00173A  EFA2  F00B         	goto	i2l268
  3451  00173E                     i2u97_40:
  3452  00173E                     
  3453                           ;./ISR.h: 307:         TMR2Counter++;
  3454  00173E  4A4E               	infsnz	_TMR2Counter^0,f,c
  3455  001740  2A4F               	incf	(_TMR2Counter+1)^0,f,c
  3456  001742                     
  3457                           ;./ISR.h: 308:         TMR2IF = 0;
  3458  001742  929E               	bcf	3998,1,c	;volatile
  3459  001744                     i2l268:
  3460  001744  C00E  FFF4         	movff	??_my_ISR+5,prodh
  3461  001748  C00D  FFF3         	movff	??_my_ISR+4,prodl
  3462  00174C  C00C  FFDA         	movff	??_my_ISR+3,fsr2h
  3463  001750  C00B  FFD9         	movff	??_my_ISR+2,fsr2l
  3464  001754  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3465  001756  0011               	retfie		f
  3466  001758                     __end_of_my_ISR:
  3467                           	callstack 0
  3468                           
  3469 ;; *************** function i2___awdiv *****************
  3470 ;; Defined at:
  3471 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/awdiv.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  dividend        2    0[COMRAM] int 
  3474 ;;  divisor         2    2[COMRAM] int 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  quotient        2    6[COMRAM] int 
  3477 ;;  sign            1    5[COMRAM] unsigned char 
  3478 ;;  counter         1    4[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  2    0[COMRAM] int 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;Total ram usage:        8 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; This function calls:
  3495 ;;		Nothing
  3496 ;; This function is called by:
  3497 ;;		_my_ISR
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text20
  3502  0018F0                     __ptext20:
  3503                           	callstack 0
  3504  0018F0                     i2___awdiv:
  3505                           	callstack 26
  3506  0018F0  0E00               	movlw	0
  3507  0018F2  6E06               	movwf	i2___awdiv@sign^0,c
  3508  0018F4  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  3509  0018F6  EF81  F00C         	goto	i2u72_40
  3510  0018FA  EF7F  F00C         	goto	i2u72_41
  3511  0018FE                     i2u72_41:
  3512  0018FE  EF87  F00C         	goto	i2l2102
  3513  001902                     i2u72_40:
  3514  001902  6C03               	negf	i2___awdiv@divisor^0,c
  3515  001904  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  3516  001906  B0D8               	btfsc	status,0,c
  3517  001908  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  3518  00190A  0E01               	movlw	1
  3519  00190C  6E06               	movwf	i2___awdiv@sign^0,c
  3520  00190E                     i2l2102:
  3521  00190E  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  3522  001910  EF8E  F00C         	goto	i2u73_40
  3523  001914  EF8C  F00C         	goto	i2u73_41
  3524  001918                     i2u73_41:
  3525  001918  EF94  F00C         	goto	i2l2108
  3526  00191C                     i2u73_40:
  3527  00191C  6C01               	negf	i2___awdiv@dividend^0,c
  3528  00191E  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  3529  001920  B0D8               	btfsc	status,0,c
  3530  001922  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  3531  001924  0E01               	movlw	1
  3532  001926  1A06               	xorwf	i2___awdiv@sign^0,f,c
  3533  001928                     i2l2108:
  3534  001928  0E00               	movlw	0
  3535  00192A  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  3536  00192C  0E00               	movlw	0
  3537  00192E  6E07               	movwf	i2___awdiv@quotient^0,c
  3538  001930  5003               	movf	i2___awdiv@divisor^0,w,c
  3539  001932  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  3540  001934  B4D8               	btfsc	status,2,c
  3541  001936  EF9F  F00C         	goto	i2u74_41
  3542  00193A  EFA1  F00C         	goto	i2u74_40
  3543  00193E                     i2u74_41:
  3544  00193E  EFC9  F00C         	goto	i2l2130
  3545  001942                     i2u74_40:
  3546  001942  0E01               	movlw	1
  3547  001944  6E05               	movwf	i2___awdiv@counter^0,c
  3548  001946  EFA9  F00C         	goto	i2l2116
  3549  00194A                     i2l2114:
  3550  00194A  90D8               	bcf	status,0,c
  3551  00194C  3603               	rlcf	i2___awdiv@divisor^0,f,c
  3552  00194E  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  3553  001950  2A05               	incf	i2___awdiv@counter^0,f,c
  3554  001952                     i2l2116:
  3555  001952  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  3556  001954  EFAE  F00C         	goto	i2u75_41
  3557  001958  EFB0  F00C         	goto	i2u75_40
  3558  00195C                     i2u75_41:
  3559  00195C  EFA5  F00C         	goto	i2l2114
  3560  001960                     i2u75_40:
  3561  001960                     i2l2118:
  3562  001960  90D8               	bcf	status,0,c
  3563  001962  3607               	rlcf	i2___awdiv@quotient^0,f,c
  3564  001964  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  3565  001966  5003               	movf	i2___awdiv@divisor^0,w,c
  3566  001968  5C01               	subwf	i2___awdiv@dividend^0,w,c
  3567  00196A  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3568  00196C  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  3569  00196E  A0D8               	btfss	status,0,c
  3570  001970  EFBC  F00C         	goto	i2u76_41
  3571  001974  EFBE  F00C         	goto	i2u76_40
  3572  001978                     i2u76_41:
  3573  001978  EFC3  F00C         	goto	i2l2126
  3574  00197C                     i2u76_40:
  3575  00197C  5003               	movf	i2___awdiv@divisor^0,w,c
  3576  00197E  5E01               	subwf	i2___awdiv@dividend^0,f,c
  3577  001980  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  3578  001982  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  3579  001984  8007               	bsf	i2___awdiv@quotient^0,0,c
  3580  001986                     i2l2126:
  3581  001986  90D8               	bcf	status,0,c
  3582  001988  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  3583  00198A  3203               	rrcf	i2___awdiv@divisor^0,f,c
  3584  00198C  2E05               	decfsz	i2___awdiv@counter^0,f,c
  3585  00198E  EFB0  F00C         	goto	i2l2118
  3586  001992                     i2l2130:
  3587  001992  5006               	movf	i2___awdiv@sign^0,w,c
  3588  001994  B4D8               	btfsc	status,2,c
  3589  001996  EFCF  F00C         	goto	i2u77_41
  3590  00199A  EFD1  F00C         	goto	i2u77_40
  3591  00199E                     i2u77_41:
  3592  00199E  EFD5  F00C         	goto	i2l2134
  3593  0019A2                     i2u77_40:
  3594  0019A2  6C07               	negf	i2___awdiv@quotient^0,c
  3595  0019A4  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  3596  0019A6  B0D8               	btfsc	status,0,c
  3597  0019A8  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  3598  0019AA                     i2l2134:
  3599  0019AA  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  3600  0019AE  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  3601  0019B2  0012               	return		;funcret
  3602  0019B4                     __end_ofi2___awdiv:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function ___lwdiv *****************
  3606 ;; Defined at:
  3607 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  dividend        2    0[COMRAM] unsigned int 
  3610 ;;  divisor         2    2[COMRAM] unsigned int 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  quotient        2    4[COMRAM] unsigned int 
  3613 ;;  counter         1    6[COMRAM] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    0[COMRAM] unsigned int 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_my_ISR
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text21
  3637  001A3E                     __ptext21:
  3638                           	callstack 0
  3639  001A3E                     ___lwdiv:
  3640                           	callstack 26
  3641  001A3E  0E00               	movlw	0
  3642  001A40  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3643  001A42  0E00               	movlw	0
  3644  001A44  6E05               	movwf	___lwdiv@quotient^0,c
  3645  001A46  5003               	movf	___lwdiv@divisor^0,w,c
  3646  001A48  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3647  001A4A  B4D8               	btfsc	status,2,c
  3648  001A4C  EF2A  F00D         	goto	i2u69_41
  3649  001A50  EF2C  F00D         	goto	i2u69_40
  3650  001A54                     i2u69_41:
  3651  001A54  EF54  F00D         	goto	i2l864
  3652  001A58                     i2u69_40:
  3653  001A58  0E01               	movlw	1
  3654  001A5A  6E07               	movwf	___lwdiv@counter^0,c
  3655  001A5C  EF34  F00D         	goto	i2l2080
  3656  001A60                     i2l2078:
  3657  001A60  90D8               	bcf	status,0,c
  3658  001A62  3603               	rlcf	___lwdiv@divisor^0,f,c
  3659  001A64  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3660  001A66  2A07               	incf	___lwdiv@counter^0,f,c
  3661  001A68                     i2l2080:
  3662  001A68  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3663  001A6A  EF39  F00D         	goto	i2u70_41
  3664  001A6E  EF3B  F00D         	goto	i2u70_40
  3665  001A72                     i2u70_41:
  3666  001A72  EF30  F00D         	goto	i2l2078
  3667  001A76                     i2u70_40:
  3668  001A76                     i2l2082:
  3669  001A76  90D8               	bcf	status,0,c
  3670  001A78  3605               	rlcf	___lwdiv@quotient^0,f,c
  3671  001A7A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3672  001A7C  5003               	movf	___lwdiv@divisor^0,w,c
  3673  001A7E  5C01               	subwf	___lwdiv@dividend^0,w,c
  3674  001A80  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3675  001A82  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3676  001A84  A0D8               	btfss	status,0,c
  3677  001A86  EF47  F00D         	goto	i2u71_41
  3678  001A8A  EF49  F00D         	goto	i2u71_40
  3679  001A8E                     i2u71_41:
  3680  001A8E  EF4E  F00D         	goto	i2l2090
  3681  001A92                     i2u71_40:
  3682  001A92  5003               	movf	___lwdiv@divisor^0,w,c
  3683  001A94  5E01               	subwf	___lwdiv@dividend^0,f,c
  3684  001A96  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3685  001A98  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3686  001A9A  8005               	bsf	___lwdiv@quotient^0,0,c
  3687  001A9C                     i2l2090:
  3688  001A9C  90D8               	bcf	status,0,c
  3689  001A9E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3690  001AA0  3203               	rrcf	___lwdiv@divisor^0,f,c
  3691  001AA2  2E07               	decfsz	___lwdiv@counter^0,f,c
  3692  001AA4  EF3B  F00D         	goto	i2l2082
  3693  001AA8                     i2l864:
  3694  001AA8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3695  001AAC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3696  001AB0  0012               	return		;funcret
  3697  001AB2                     __end_of___lwdiv:
  3698                           	callstack 0
  3699                           
  3700                           	psect	rparam
  3701  0000                     
  3702                           	psect	temp
  3703  000059                     btemp:
  3704                           	callstack 0
  3705  000059                     	ds	1
  3706  0000                     int$flags	set	btemp
  3707  0000                     wtemp8	set	btemp+1
  3708  0000                     ttemp5	set	btemp+1
  3709  0000                     ttemp6	set	btemp+4
  3710  0000                     ttemp7	set	btemp+8
  3711                           
  3712                           	psect	idloc
  3713                           
  3714                           ;Config register IDLOC0 @ 0x200000
  3715                           ;	unspecified, using default values
  3716  200000                     	org	2097152
  3717  200000  FF                 	db	255
  3718                           
  3719                           ;Config register IDLOC1 @ 0x200001
  3720                           ;	unspecified, using default values
  3721  200001                     	org	2097153
  3722  200001  FF                 	db	255
  3723                           
  3724                           ;Config register IDLOC2 @ 0x200002
  3725                           ;	unspecified, using default values
  3726  200002                     	org	2097154
  3727  200002  FF                 	db	255
  3728                           
  3729                           ;Config register IDLOC3 @ 0x200003
  3730                           ;	unspecified, using default values
  3731  200003                     	org	2097155
  3732  200003  FF                 	db	255
  3733                           
  3734                           ;Config register IDLOC4 @ 0x200004
  3735                           ;	unspecified, using default values
  3736  200004                     	org	2097156
  3737  200004  FF                 	db	255
  3738                           
  3739                           ;Config register IDLOC5 @ 0x200005
  3740                           ;	unspecified, using default values
  3741  200005                     	org	2097157
  3742  200005  FF                 	db	255
  3743                           
  3744                           ;Config register IDLOC6 @ 0x200006
  3745                           ;	unspecified, using default values
  3746  200006                     	org	2097158
  3747  200006  FF                 	db	255
  3748                           
  3749                           ;Config register IDLOC7 @ 0x200007
  3750                           ;	unspecified, using default values
  3751  200007                     	org	2097159
  3752  200007  FF                 	db	255
  3753                           
  3754                           	psect	config
  3755                           
  3756                           ; Padding undefined space
  3757  300000                     	org	3145728
  3758  300000  FF                 	db	255
  3759                           
  3760                           ;Config register CONFIG1H @ 0x300001
  3761                           ;	Oscillator Selection bits
  3762                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3763                           ;	Fail-Safe Clock Monitor Enable bit
  3764                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3765                           ;	Internal/External Oscillator Switchover bit
  3766                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3767  300001                     	org	3145729
  3768  300001  08                 	db	8
  3769                           
  3770                           ;Config register CONFIG2L @ 0x300002
  3771                           ;	Power-up Timer Enable bit
  3772                           ;	PWRT = OFF, PWRT disabled
  3773                           ;	Brown-out Reset Enable bits
  3774                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3775                           ;	Brown Out Reset Voltage bits
  3776                           ;	BORV = 3, Minimum setting
  3777  300002                     	org	3145730
  3778  300002  1F                 	db	31
  3779                           
  3780                           ;Config register CONFIG2H @ 0x300003
  3781                           ;	Watchdog Timer Enable bit
  3782                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3783                           ;	Watchdog Timer Postscale Select bits
  3784                           ;	WDTPS = 32768, 1:32768
  3785  300003                     	org	3145731
  3786  300003  1E                 	db	30
  3787                           
  3788                           ; Padding undefined space
  3789  300004                     	org	3145732
  3790  300004  FF                 	db	255
  3791                           
  3792                           ;Config register CONFIG3H @ 0x300005
  3793                           ;	CCP2 MUX bit
  3794                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3795                           ;	PORTB A/D Enable bit
  3796                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3797                           ;	Low-Power Timer1 Oscillator Enable bit
  3798                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3799                           ;	MCLR Pin Enable bit
  3800                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3801  300005                     	org	3145733
  3802  300005  81                 	db	129
  3803                           
  3804                           ;Config register CONFIG4L @ 0x300006
  3805                           ;	Stack Full/Underflow Reset Enable bit
  3806                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3807                           ;	Single-Supply ICSP Enable bit
  3808                           ;	LVP = OFF, Single-Supply ICSP disabled
  3809                           ;	Extended Instruction Set Enable bit
  3810                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3811                           ;	Background Debugger Enable bit
  3812                           ;	DEBUG = 0x1, unprogrammed default
  3813  300006                     	org	3145734
  3814  300006  81                 	db	129
  3815                           
  3816                           ; Padding undefined space
  3817  300007                     	org	3145735
  3818  300007  FF                 	db	255
  3819                           
  3820                           ;Config register CONFIG5L @ 0x300008
  3821                           ;	Code Protection bit
  3822                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3823                           ;	Code Protection bit
  3824                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3825                           ;	Code Protection bit
  3826                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3827                           ;	Code Protection bit
  3828                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3829  300008                     	org	3145736
  3830  300008  0F                 	db	15
  3831                           
  3832                           ;Config register CONFIG5H @ 0x300009
  3833                           ;	Boot Block Code Protection bit
  3834                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3835                           ;	Data EEPROM Code Protection bit
  3836                           ;	CPD = OFF, Data EEPROM not code-protected
  3837  300009                     	org	3145737
  3838  300009  C0                 	db	192
  3839                           
  3840                           ;Config register CONFIG6L @ 0x30000A
  3841                           ;	Write Protection bit
  3842                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3843                           ;	Write Protection bit
  3844                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3845                           ;	Write Protection bit
  3846                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3847                           ;	Write Protection bit
  3848                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3849  30000A                     	org	3145738
  3850  30000A  0F                 	db	15
  3851                           
  3852                           ;Config register CONFIG6H @ 0x30000B
  3853                           ;	Configuration Register Write Protection bit
  3854                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3855                           ;	Boot Block Write Protection bit
  3856                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3857                           ;	Data EEPROM Write Protection bit
  3858                           ;	WRTD = OFF, Data EEPROM not write-protected
  3859  30000B                     	org	3145739
  3860  30000B  E0                 	db	224
  3861                           
  3862                           ;Config register CONFIG7L @ 0x30000C
  3863                           ;	Table Read Protection bit
  3864                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3865                           ;	Table Read Protection bit
  3866                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3867                           ;	Table Read Protection bit
  3868                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3869                           ;	Table Read Protection bit
  3870                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3871  30000C                     	org	3145740
  3872  30000C  0F                 	db	15
  3873                           
  3874                           ;Config register CONFIG7H @ 0x30000D
  3875                           ;	Boot Block Table Read Protection bit
  3876                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3877  30000D                     	org	3145741
  3878  30000D  40                 	db	64
  3879                           tosu	equ	0xFFF
  3880                           tosh	equ	0xFFE
  3881                           tosl	equ	0xFFD
  3882                           stkptr	equ	0xFFC
  3883                           pclatu	equ	0xFFB
  3884                           pclath	equ	0xFFA
  3885                           pcl	equ	0xFF9
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           prodh	equ	0xFF4
  3891                           prodl	equ	0xFF3
  3892                           indf0	equ	0xFEF
  3893                           postinc0	equ	0xFEE
  3894                           postdec0	equ	0xFED
  3895                           preinc0	equ	0xFEC
  3896                           plusw0	equ	0xFEB
  3897                           fsr0h	equ	0xFEA
  3898                           fsr0l	equ	0xFE9
  3899                           wreg	equ	0xFE8
  3900                           indf1	equ	0xFE7
  3901                           postinc1	equ	0xFE6
  3902                           postdec1	equ	0xFE5
  3903                           preinc1	equ	0xFE4
  3904                           plusw1	equ	0xFE3
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           bsr	equ	0xFE0
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           postdec2	equ	0xFDD
  3911                           preinc2	equ	0xFDC
  3912                           plusw2	equ	0xFDB
  3913                           fsr2h	equ	0xFDA
  3914                           fsr2l	equ	0xFD9
  3915                           status	equ	0xFD8

Data Sizes:
    Strings     124
    Constant    0
    Data        27
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      88
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    LCDStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_11(CODE[16]), STR_10(CODE[12]), STR_9(CODE[13]), STR_8(CODE[16]), 
		 -> STR_7(CODE[9]), STR_6(CODE[11]), STR_5(CODE[9]), STR_4(CODE[16]), 
		 -> STR_3(CODE[9]), STR_2(CODE[14]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_displayNumbers
    _displayNumbers->___awdiv
    _LCDStr->_LCDGoto
    _LCDGoto->_LCDCmd
    _InitLCD->_LCDCmd

Critical Paths under _my_ISR in COMRAM

    _my_ISR->i2___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _my_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _my_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _my_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _my_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _my_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _my_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _my_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _my_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    7285
                                             32 COMRAM     8     8      0
                            _InitLCD
                             _LCDCmd
                            _LCDGoto
                             _LCDStr
                            ___awdiv
           _config_ADC_Potentiometer
             _config_ADC_Thermometer
                    _delayWithTimer2
                     _displayNumbers
             _init_ADC_Potentiometer
               _init_ADC_Thermometer
                         _init_Clock
                         _init_PORTB
                        _init_TIMER0
                        _init_TIMER1
                        _init_TIMER2
                      _passwordCheck
 ---------------------------------------------------------------------------------
 (1) _passwordCheck                                        5     3      2      90
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _init_TIMER2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TIMER1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_TIMER0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_PORTB                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Clock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC_Thermometer                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC_Potentiometer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayNumbers                                       7     4      3    2550
                                             25 COMRAM     7     4      3
                             _LCDDat
                            _LCDGoto
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     704
                                             17 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _delayWithTimer2                                      4     2      2     198
                                             17 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _config_ADC_Thermometer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC_Potentiometer                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDStr                                               5     3      2    2220
                                             21 COMRAM     5     3      2
                             _LCDDat
                            _LCDGoto
 ---------------------------------------------------------------------------------
 (2) _LCDGoto                                              2     1      1    1272
                                             19 COMRAM     2     1      1
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (2) _LCDDat                                               2     2      0      22
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitLCD                                              0     0      0      22
                             _LCDCmd
 ---------------------------------------------------------------------------------
 (3) _LCDCmd                                               2     2      0      22
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _my_ISR                                              14    14      0     783
                                              8 COMRAM     9     9      0
                            ___lwdiv
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (5) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitLCD
     _LCDCmd
   _LCDCmd
   _LCDGoto
     _LCDCmd
   _LCDStr
     _LCDDat
     _LCDGoto
   ___awdiv
   _config_ADC_Potentiometer
   _config_ADC_Thermometer
   _delayWithTimer2
   _displayNumbers
     _LCDDat
     _LCDGoto
     ___awdiv
   _init_ADC_Potentiometer
   _init_ADC_Thermometer
   _init_Clock
   _init_PORTB
   _init_TIMER0
   _init_TIMER1
   _init_TIMER2
   _passwordCheck

 _my_ISR (ROOT)
   ___lwdiv
   i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      58       1       69.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      34        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun  6 19:39:52 2021

           __end_of_displayNumbers 182C                       ___awdiv@sign 0017  
           ??_init_ADC_Thermometer 0012                                l200 1BD0  
                              l201 1BD2                                l210 1D08  
                              l204 1C60                                l213 1CF8  
                              l223 1C9E                                l231 1B74  
                              l207 1C1E                                l216 1BF8  
                              l242 1BA6                                l226 1C80  
                              l334 12D6                                l239 1A3C  
                              l193 1C40                                l353 1B06  
                              l329 1224                                l370 1D12  
                              l339 136C                                l604 18EE  
                              l364 182A                                l196 1CD0  
                              l367 1CE6                                _GIE 007F97  
                              _RC5 007C15                                _PR2 000FCB  
                              u600 18B8                                u601 18B4  
                              u610 18DE                                u611 18DA  
                              u620 1BD0                                u621 1BCC  
                              u550 1B54                                u630 19EC  
                              u551 1B50                                u631 19E8  
                              u640 1A04                                u560 183E  
                              u641 1A00                                u561 183A  
                              u650 1A3C                                u570 1858  
                              u651 1A38                                u571 1854  
                              u580 187E                                u660 1772  
                              u581 187A                                u661 176E  
                              u590 189C                                u670 1AE0  
                              u591 1898                                u671 1ADC  
                              _PSA 007EAB                                u680 1AFE  
                              u681 1AFA                                u980 113C  
                              u981 1138                                u990 1180  
                              u991 117C     __end_of_config_ADC_Thermometer 1CFA  
                              wreg 000FE8                    __end_of_LCDGoto 1B76  
                             l2000 1B8E                               l2002 1B94  
                             l2010 1CD2                               l2004 1B9A  
                             l2020 1794                               l2012 1758  
                             l2006 1BA0                               l2030 17BA  
                             l2022 179E                               l2014 175C  
                             l2040 17E8                               l2032 17C4  
                             l2024 17A2                               l2016 1772  
                             l2008 1D0A                               l2042 17EE  
                             l2034 17CE                               l2026 17AA  
                             l2018 177E                               l2036 17D4  
                             l2028 17B4                               l2060 1AE0  
                             l2052 1AB2                               l2300 1096  
                             l2038 17DE                               l2046 17F8  
                             l2310 10AE                               l2302 109A  
                             l2064 1AEC                               l2400 126A  
                             l2320 10D6                               l2312 10B8  
                             l2304 109E                               l2066 1AEE  
                             l2058 1AB6                               l2410 1296  
                             l2402 1272                               l2330 1108  
                             l2322 10DC                               l2314 10C4  
                             l2306 10A2                               l2068 1AFE  
                             l2412 129E                               l2404 1280  
                             l2420 12EE                               l2340 112C  
                             l2332 110C                               l2324 10E6  
                             l2316 10D0                               l2308 10A4  
                             l2430 132A                               l2422 12FE  
                             l2414 12BE                               l2406 1290  
                             l2350 1160                               l2342 113C  
                             l2334 1114                               l2326 10F2  
                             l2318 10D2                               l1800 1B70  
                             l2432 1330                               l2424 130A  
                             l2416 12CE                               l2408 1294  
                             l2512 123E                               l2440 135C  
                             l2360 11A0                               l2352 1164  
                             l2336 1116                               l2328 10FC  
                             l1810 184A                               l1802 182C  
                             l2514 180C                               l2450 1390  
                             l2442 136E                               l2434 133A  
                             l2426 131C                               l2418 12E6  
                             l2370 11C8                               l2362 11A2  
                             l2354 1180                               l2338 111E  
                             l2290 107E                               l1900 1BBA  
                             l1820 187E                               l1812 1858  
                             l1804 1830                               l2460 139A  
                             l2452 1392                               l2444 138A  
                             l2436 1346                               l2428 1328  
                             l2380 11EA                               l2372 11D4  
                             l2364 11A8                               l2356 1184  
                             l2348 1144                               l2292 1082  
                             l1830 18B8                               l1822 1886  
                             l1814 1860                               l1806 183E  
                             l1910 1C54                               l1902 1C42  
                             l2470 13D2                               l2462 13AC  
                             l2454 1394                               l2446 138C  
                             l2438 1350                               l2382 11EC  
                             l2374 11D8                               l2366 11B2  
                             l2358 1188                               l2294 1086  
                             l1840 18DE                               l1832 18C0  
                             l1824 188E                               l1816 1864  
                             l1808 1846                               l1920 1C16  
                             l1912 1C56                               l1904 1C4E  
                             l2480 1402                               l2464 13B2  
                             l2472 13E2                               l2456 1396  
                             l2448 138E                               l2392 122A  
                             l2384 11FC                               l2376 11E0  
                             l2368 11BE                               l2296 108A  
                             l1770 1C84                               l1930 1CFA  
                             l1842 18E6                               l1834 18C2  
                             l1826 189C                               l1818 186C  
                             l1922 1C18                               l1914 1BFA  
                             l1850 1C26                               l1906 1C50  
                             l2490 1420                               l2482 1406  
                             l2474 13E8                               l2466 13BC  
                             l2458 1398                               l2394 125C  
                             l2386 1208                               l2378 11E2  
                             l2298 108E                               l1772 1C88  
                             l1780 1C64                               l1932 1CFE  
                             l1940 1CE8                               l1836 18C8  
                             l1828 18A2                               l1924 1C1A  
                             l1916 1C12                               l1860 1C30  
                             l1852 1C28                               l1908 1C52  
                             l2492 142A                               l2484 1408  
                             l2476 13F2                               l2468 13C8  
                             l2396 1264                               l2388 1214  
                             l1774 1C8C                               l1790 1C7E  
                             l1782 1C68                               l1934 1D00  
                             l1942 1CEC                               l1838 18CE  
                             l1926 1C1C                               l1918 1C14  
                             l1950 1BD4                               l1870 1C3C  
                             l1862 1C32                               l1854 1C2A  
                             l1846 1C20                               l2494 1436  
                             l2486 140A                               l2478 13FE  
                             l2398 1268                               l1776 1C8E  
                             l1784 1C6C                               l1792 1B44  
                             l1936 1D04                               l1944 1CF0  
                             l1960 1BF4                               l1952 1BEC  
                             l1864 1C34                               l1856 1C2C  
                             l1848 1C24                               l1880 1CC4  
                             l2488 141A                               l1778 1C9C  
                             l1786 1C6E                               l1794 1B54  
                             l1970 19D8                               l1946 1CF4  
                             l1962 1BF6                               l1954 1BEE  
                             l1866 1C36                               l1858 1C2E  
                             l1890 1CCE                               l1882 1CC6  
                             l1874 1CBC                               l1788 1C7C  
                             l1796 1B62                               l1980 1A04  
                             l1972 19DA                               l1956 1BF0  
                             l1868 1C38                               l1884 1CC8  
                             l1876 1CC0                               l1990 1B7A  
                             l1798 1B6C                               l1982 1A08  
                             l1974 19EC                               l1966 19B4  
                             l1894 1BA8                               l1958 1BF2  
                             l1886 1CCA                               l1878 1CC2  
                             l1992 1B7E                               l1976 19F0  
                             l1984 1A12                               l1968 19BC  
                             l1896 1BB0                               l1888 1CCC  
                             l1994 1B80                               l1978 19F2  
                             l1986 1A14                               l1898 1BB2  
                      main@isValid 0023                               l1996 1B82  
                             l1988 1B76                               l1998 1B88  
                             _ADIE 007CEE                               _ADIF 007CF6  
                             _ADIP 007CFE                               STR_1 1001  
                             STR_2 1042                               STR_3 1074  
                             STR_4 1022                               STR_5 1074  
                             STR_6 1069                               STR_7 1074  
                             STR_8 1032                               STR_9 1050  
                             u1000 11FC                               u1001 11F8  
                             _T0CS 007EAD                               u1010 1290  
                             u1011 128C                               u1020 12CE  
                             u1021 12CA                               u1030 12E6  
                             u1031 12E2                               u1040 12FE  
                             u1041 12FA                               u1050 131C  
                             u1051 1318                               u1107 11E4  
                             u1060 136C                               u1061 1368  
                             u1117 126C                               u1070 13AC  
                             u1071 13A8                               u1127 1298  
                             u1080 141A                               u1137 1C74  
                             u1081 1416                               u1147 1C94  
                             u1097 1118                               _IPEN 007E87  
                             _PEIE 007F96                               _RBIE 007F93  
                             _RBIF 007F90                               _RBIP 007F88  
                             _RBPU 007F8F                               _TMR2 000FCC  
                             _main 107E                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 0059                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
               my_ISR@read_ADC_Raw 0010                       ?_init_TIMER0 0001  
                     ?_init_TIMER1 0001                       ?_init_TIMER2 0001  
                     ___param_bank 000000                    __end_of_InitLCD 1BA8  
                  ?_displayNumbers 001A                              ?_main 0001  
                  __end_of___awdiv 18F0                              STR_10 105D  
                            STR_11 1012                              _T0CON 000FD5  
                  ___awdiv@divisor 0014                              _T1CON 000FCD  
                            _T2CON 000FCA                              _T0PS0 007EA8  
                            _T0PS1 007EA9                              _T0PS2 007EAA  
                            _IRCF0 007E9C                              _IRCF1 007E9D  
                            _IRCF2 007E9E                    __end_of___lwdiv 1AB2  
                            i2l252 14A8                              i2l261 15B6  
                            i2l254 14DE                              i2l258 15BC  
                            i2l604 19B2                              i2l268 1744  
                            i2l871 1AB0                              i2l864 1AA8  
                  ___awdiv@counter 0016                              _PLLEN 007CDE  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _PORTA 000F80                              _PORTB 000F81  
                            _PORTD 000F83                              _PORTE 000F84  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TRISD 000F95                              _lcd_x 0042  
                            _lcd_y 0041           __size_of_delayWithTimer2 002C  
                            main@i 0026                              tablat 000FF5  
                            ttemp5 005A                              ttemp6 005D  
                            ttemp7 0061                              status 000FD8  
                            wtemp8 005A                 __size_ofi2___awdiv 00C4  
                  __initialization 1B08                       __end_of_main 144A  
            __end_of_passwordCheck 1B08                             ??_main 0021  
                    __activetblptr 000002                          ??_LCDGoto 0015  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                             _ADRESH 000FC4  
                           _ADRESL 000FC3                             _T08BIT 007EAE  
              displayNumbers@value 001A                   ___awdiv@dividend 0012  
                           _LCDDat 1C62                             _LCDCmd 1C82  
                           _INT0IE 007F94                             _INT0IF 007F91  
                           _INT1IE 007F83                             _INT1IF 007F80  
                           _INT2IE 007F84                             _INT2IF 007F81  
                           i2l2100 190A                             i2l2110 1930  
                           i2l2102 190E                             i2l2120 1966  
                           i2l2112 1942                             i2l2104 191C  
                           i2l2200 15E2                             i2l2122 197C  
                           i2l2114 194A                             i2l2130 1992  
                           i2l2106 1924                             i2l2210 1606  
                           i2l2202 15E4                             i2l2132 19A2  
                           i2l2124 1984                             i2l2116 1952  
                           i2l2108 1928                             i2l2220 1648  
                           i2l2212 161C                             i2l2204 15F2  
                           i2l2140 146A                             i2l2134 19AA  
                           i2l2126 1986                             i2l2118 1960  
                           i2l2230 1674                             i2l2222 164A  
                           i2l2214 1626                             i2l2206 15F6  
                           i2l2150 1498                             i2l2142 146A  
                           i2l2080 1A68                             i2l2072 1A3E  
                           i2l2128 198C                             i2l2232 167C  
                           i2l2224 165A                             i2l2216 1628  
                           i2l2240 1688                             i2l2208 15F8  
                           i2l2160 1504                             i2l2152 14BE  
                           i2l2144 1476                             i2l2090 1A9C  
                           i2l2082 1A76                             i2l2074 1A46  
                           i2l2250 16B6                             i2l2242 1696  
                           i2l2226 165C                             i2l2234 167E  
                           i2l2218 1638                             i2l2162 1508  
                           i2l2154 14DA                             i2l2146 147E  
                           i2l2138 145C                             i2l2092 1AA2  
                           i2l2084 1A7C                             i2l2076 1A58  
                           i2l2260 16EE                             i2l2252 16CA  
                           i2l2244 16A2                             i2l2236 1682  
                           i2l2228 166C                             i2l2180 1568  
                           i2l2172 1532                             i2l2164 151A  
                           i2l2156 14EE                             i2l2148 1486  
                           i2l2086 1A92                             i2l2078 1A60  
                           i2l2094 18F0                             i2l2270 1722  
                           i2l2262 16F0                             i2l2254 16CC  
                           i2l2246 16A4                             i2l2238 1686  
                           i2l2182 1570                             i2l2174 1542  
                           i2l2190 1584                             i2l2166 151E  
                           i2l2158 1500                             _LCDStr 19B4  
                           i2l2088 1A9A                             i2l2096 18F4  
                           i2l2280 173E                             i2l2272 1726  
                           i2l2264 1702                             i2l2256 16DA  
                           i2l2248 16B4                             i2l2192 15CA  
                           i2l2176 1552                             i2l2168 1520  
                           i2l2098 1902                             i2l2282 1742  
                           i2l2274 172A                             i2l2266 1712  
                           i2l2258 16DE                             i2l2194 15CE  
                           i2l2178 1558                             i2l2276 172E  
                           i2l2268 1714                             i2l2196 15D0  
                           i2l2516 1598                             i2l2278 1730  
                           i2l2198 15DE                             _TMR0IE 007F95  
                           _TMR0IF 007F92                             _TMR1IE 007CE8  
                           _TMR1IF 007CF0                             _TMR1CS 007E69  
                           _TMR2IE 007CE9                             _TMR2IF 007CF1  
                           _TMR0ON 007EAF                             _TMR1ON 007E68  
                           _TMR2ON 007E52                          ??_InitLCD 0014  
                   _downCounter90s 0043           ??_init_ADC_Potentiometer 0012  
                        ??___awdiv 0016                          ??___lwdiv 0005  
                           _my_ISR 0008         ??_config_ADC_Potentiometer 0012  
                           clear_0 1B2E                   ___awdiv@quotient 0018  
                           isa$std 000001                             _start3 0054  
                   i2___awdiv@sign 0006                       __pdataCOMRAM 0029  
                __end_ofi2___awdiv 19B4                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          LCDDat@dat 0013  
                        LCDCmd@cmd 0013                         __accesstop 0080  
          __end_of__initialization 1B34                  ??_delayWithTimer2 0014  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                        LCDStr@str 0016               __size_of_init_TIMER0 0022  
             __size_of_init_TIMER1 0016               __size_of_init_TIMER2 0020  
                          ?_LCDDat 0001                            ?_LCDCmd 0001  
                          ?_LCDStr 0016                            LCDStr@i 001A  
                 ??_displayNumbers 001D    __size_of_init_ADC_Potentiometer 0026  
             displayNumbers@digitH 0020               displayNumbers@digitL 001F  
                          ?_my_ISR 0001                            _T1CKPS0 007E6C  
                          _T1CKPS1 007E6D                     main@attemption 0028  
                          _T1OSCEN 007E6B                            _LCDGoto 1B42  
    __size_of_init_ADC_Thermometer 0026                            _INTEDG0 007F8E  
                          _INTEDG1 007F8D                            i2u70_40 1A76  
                          i2u70_41 1A72                            i2u71_40 1A92  
                          i2u71_41 1A8E                            i2u72_40 1902  
                          i2u80_40 14BE                            i2u72_41 18FE  
                          i2u80_41 14BA                            i2u73_40 191C  
                          i2u81_40 14EE                            i2u73_41 1918  
                          i2u81_41 14EA                            i2u74_40 1942  
                          i2u90_40 15F2                            i2u82_40 1500  
                          i2u74_41 193E                            i2u90_41 15EE  
                          i2u82_41 14FC                            i2u75_40 1960  
                          i2u91_40 1606                            i2u83_40 151A  
                          i2u75_41 195C                            i2u91_41 1602  
                          i2u83_41 1516                            i2u76_40 197C  
                          i2u92_40 1638                            i2u84_40 152E  
                          i2u76_41 1978                            i2u92_41 1634  
                          i2u84_41 152A                            i2u69_40 1A58  
                          i2u77_40 19A2                            i2u93_40 1648  
                          i2u85_40 1542                            i2u69_41 1A54  
                          i2u77_41 199E                            i2u93_41 1644  
                          i2u85_41 153E                            i2u94_40 165A  
                          i2u86_40 1568                            i2u78_40 146A  
                          i2u94_41 1656                            i2u86_41 1564  
                          i2u78_41 1466                            i2u95_40 166C  
                          i2u87_40 1580                            i2u79_40 1498  
                          i2u95_41 1668                            i2u87_41 157C  
                          i2u79_41 1494                            i2u96_40 1696  
                          i2u88_40 15CA                            i2u96_41 1692  
                          i2u88_41 15C6                            i2u97_40 173E  
                          i2u89_40 15DE                            i2u97_41 173A  
                          i2u89_41 15DA                    __size_of_LCDDat 0020  
                  __size_of_LCDCmd 001E                    __size_of_LCDStr 008A  
                          _InitLCD 1B76                            __Hparam 0000  
                          __Lparam 0000                         _init_PORTB 1CD2  
                     my_ISR@before 000F                         _init_Clock 1D0A  
                          ___awdiv 182C                            ___lwdiv 1A3E  
 __end_of_config_ADC_Potentiometer 1D0A                       __psmallconst 1000  
                          __pcinit 1B08                    __size_of_my_ISR 1750  
                          __ramtop 1000                            __ptext0 107E  
                          __ptext1 1AB2                            __ptext2 1C42  
                          __ptext3 1CBC                            __ptext4 1C20  
                          __ptext5 1CD2                            __ptext6 1D0A  
                          __ptext7 1BD4                            __ptext8 1BFA  
                          __ptext9 1758             _init_ADC_Potentiometer 1BFA  
                   __pintcode_body 144A               end_of_initialization 1B34  
                    __Lmediumconst 0000                            int_func 144A  
                          postdec1 000FE5                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                       _result_ADC 0057           ??_config_ADC_Thermometer 0012  
                        _PORTEbits 000F84                          _TRISEbits 000F96  
                  _delayWithTimer2 1BA8                          i2___awdiv 18F0  
           __size_of_passwordCheck 0056                     __end_of_LCDDat 1C82  
                   __end_of_LCDCmd 1CA0                     __end_of_LCDStr 1A3E  
                       LCDGoto@p_1 0014                         LCDGoto@p_2 0015  
               i2___awdiv@dividend 0001                        ?_init_PORTB 0001  
                      ?_init_Clock 0001                      __pidataCOMRAM 1CA0  
                   __end_of_my_ISR 1758                start_initialization 1B08  
               i2___awdiv@quotient 0007                         ?i2___awdiv 0001  
__size_of_config_ADC_Potentiometer 0010                           ??_LCDDat 0012  
                         ??_LCDCmd 0012          ?_config_ADC_Potentiometer 0001  
                         ??_LCDStr 0018          delayWithTimer2@currentVal 0014  
                    ??_init_TIMER0 0012                      ??_init_TIMER1 0012  
                    ??_init_TIMER2 0012                         my_ISR@flip 0050  
                    _passwordCheck 1AB2                           ??_my_ISR 0009  
  __size_of_config_ADC_Thermometer 0012            __end_of_delayWithTimer2 1BD4  
      delayWithTimer2@milliseconds 0012                           ?_LCDGoto 0014  
                      __pbssCOMRAM 0044                __size_of_init_PORTB 0016  
              __size_of_init_Clock 000A       __end_of_init_ADC_Thermometer 1BFA  
                         ?_InitLCD 0001                   ___lwdiv@dividend 0001  
                        __pintcode 0008                        _blinkEnable 0052  
                   ?_passwordCheck 0012                           ?___awdiv 0012  
                         ?___lwdiv 0001                __end_of_init_TIMER0 1C42  
              __end_of_init_TIMER1 1CD2                __end_of_init_TIMER2 1C62  
            displayNumbers@digitNo 001C            ?_init_ADC_Potentiometer 0001  
                      __smallconst 1000                          _firstTime 0056  
                        _lockAgain 0053                   ___lwdiv@quotient 0005  
                      ??i2___awdiv 0005                          _safeState 0055  
           _config_ADC_Thermometer 1CE8                           i2u115_47 16D2  
                         i2u116_47 16F6                           _TIM0LOAD 003D  
                         i2u117_47 171A                           _TIM1LOAD 0039  
                         _PIR1bits 000F9E                        _displayData 0044  
   __end_of_init_ADC_Potentiometer 1C20                   ?_delayWithTimer2 0012  
          __size_of_displayNumbers 00D4                   __size_of_LCDGoto 0034  
                i2___awdiv@divisor 0003                  i2___awdiv@counter 0005  
                        copy_data0 1B1C                    _digitEntryCount 0058  
            main@heaterTemperature 0025                   __size_of_InitLCD 0032  
                         __Hrparam 0000                    ??_passwordCheck 0014  
                      _init_TIMER0 1C20                        _init_TIMER1 1CBC  
                      _init_TIMER2 1C42                       ??_init_PORTB 0012  
                         __Lrparam 0000                       ??_init_Clock 0012  
                    my_ISR@halfSec 0051                       _passwordsSet 0048  
                 __size_of___awdiv 00C4                   __size_of___lwdiv 0074  
             _init_ADC_Thermometer 1BD4                    ___lwdiv@divisor 0003  
                  ___lwdiv@counter 0007                           __ptext10 182C  
                         __ptext11 1BA8                           __ptext20 18F0  
                         __ptext12 1CE8                           __ptext21 1A3E  
                         __ptext13 1CFA                           __ptext14 19B4  
                         __ptext15 1B42                           __ptext16 1C62  
                         __ptext17 1B76                           __ptext18 1C82  
               __end_of_init_PORTB 1CE8                 __end_of_init_Clock 1D14  
                    __size_of_main 03CC                           isa$xinst 000000  
                         int$flags 0059              ?_init_ADC_Thermometer 0001  
                      _segmentData 0029                           intlevel2 0000  
                      _TMR2Counter 004E                   _passwordsAttempt 004B  
                   _displayNumbers 1758            ?_config_ADC_Thermometer 0001  
         _config_ADC_Potentiometer 1CFA                     passwordCheck@n 0016  
